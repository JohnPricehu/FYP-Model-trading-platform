{"ast":null,"code":"import { FAVOURITE_ADD_REQUEST, FAVOURITE_ADD_SUCCESS, FAVOURITE_ADD_FAIL, FAVOURITE_ADD_RESET, FAVOURITE_REMOVE_REQUEST, FAVOURITE_REMOVE_SUCCESS, FAVOURITE_REMOVE_FAIL } from \"../constants/favouriteConstants\";\nimport axios from \"axios\";\nexport const addToFavouriteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FAVOURITE_ADD_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/favourite/goods/${id}`, config);\n    dispatch({\n      type: FAVOURITE_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: FAVOURITE_ADD_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteFavouriteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: FAVOURITE_REMOVE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/favourite/goods/${id}`, config);\n    dispatch({\n      type: FAVOURITE_REMOVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: FAVOURITE_REMOVE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/favouriteActions.js"],"names":["FAVOURITE_ADD_REQUEST","FAVOURITE_ADD_SUCCESS","FAVOURITE_ADD_FAIL","FAVOURITE_ADD_RESET","FAVOURITE_REMOVE_REQUEST","FAVOURITE_REMOVE_SUCCESS","FAVOURITE_REMOVE_FAIL","axios","addToFavouriteAction","id","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","deleteFavouriteAction","delete"],"mappings":"AAAA,SACIA,qBADJ,EAEIC,qBAFJ,EAGIC,kBAHJ,EAIIC,mBAJJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,qBAPJ,QAQS,iCART;AASE,OAAOC,KAAP,MAAkB,OAAlB;AAEF,OAAO,MAAMC,oBAAoB,GAAKC,EAAF,IAAU,OAC1CC,QAD0C,EAE1CC,QAF0C,KAGvC;AACH,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAIA,UAAM;AACJa,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CACpB,wBAAuBX,EAAG,EADN,EAErBM,MAFqB,CAAvB;AAKAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,qBADC;AAEPoB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAzBD,CAyBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,kBADC;AAEPmB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAvCI;AAyCL,OAAO,MAAME,qBAAqB,GAAIhB,EAAD,IAAQ,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACzE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAIA,UAAM;AACJS,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACmB,MAAN,CAAc,wBAAuBjB,EAAG,EAAxC,EAA2CM,MAA3C,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,wBADC;AAEPgB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,qBADC;AAEPe,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhCM","sourcesContent":["import {\r\n    FAVOURITE_ADD_REQUEST,\r\n    FAVOURITE_ADD_SUCCESS,\r\n    FAVOURITE_ADD_FAIL,\r\n    FAVOURITE_ADD_RESET,\r\n    FAVOURITE_REMOVE_REQUEST,\r\n    FAVOURITE_REMOVE_SUCCESS,\r\n    FAVOURITE_REMOVE_FAIL,\r\n  } from \"../constants/favouriteConstants\";\r\n  import axios from \"axios\";\r\n\r\nexport const addToFavouriteAction = ( id ) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_ADD_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/favourite/goods/${id}`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: FAVOURITE_ADD_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_ADD_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteFavouriteAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/favourite/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}