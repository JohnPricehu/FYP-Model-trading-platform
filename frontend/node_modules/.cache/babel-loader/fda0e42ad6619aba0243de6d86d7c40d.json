{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP demo\\\\frontend\\\\src\\\\views\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport { Row, Col, Image, ListGroup, Button, Card, FormControl } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Meta from '../components/Meta';\nimport { listGoodstDetails // createProductReview,\n} from '../actions/GoodsActions'; // import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [qty, setQty] = useState(1); // const [rating, setRating] = useState(0)\n  // const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch();\n  const listDetails = useSelector(state => state.goodsDetails);\n  const {\n    loading,\n    goods,\n    error\n  } = listDetails; // const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  // const {\n  //   success: successProductReview,\n  //   error: errorProductReview,\n  // } = productReviewCreate\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    // if (successProductReview) {\n    //   alert('Review Submitted!')\n    //   setRating(0)\n    //   setComment('')\n    //   dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    // }\n    dispatch(listGoodstDetails(match.params.id));\n  }, [dispatch, match.params.id // successProductReview\n  ]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}/?qty=${qty}`);\n  }; // const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(createProductReview(match.params.id, { rating, comment }))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        backgroundColor: 'rgb(63 57 63)',\n        color: 'white',\n        border: '2px solid pink',\n        borderRadius: '10px',\n        marginTop: '50px',\n        marginBottom: '10px'\n      },\n      className: \"btn btn-light\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: goods.goods_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: goods.goods_pic,\n            alt: goods.goods_name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: goods.goods_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $ \", goods.goods_price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Details: \", goods.goods_details]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"$ \", goods.goods_price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: goods.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => setQty(e.target.value),\n                      children: [...Array(goods.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: x + 1,\n                        children: x + 1\n                      }, x + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: addToCartHandler,\n                  className: \"btn-block\",\n                  style: {\n                    backgroundColor: 'rgb(63 57 63)'\n                  },\n                  type: \"button\",\n                  disabled: goods.countInStock === 0,\n                  children: \"Add To Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"z7p3cNRTajjmjua8CvnfiirVzt8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["D:/FYP demo/frontend/src/views/ProductScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Form","Row","Col","Image","ListGroup","Button","Card","FormControl","Rating","Loading","ErrorMessage","Meta","listGoodstDetails","ProductScreen","history","match","qty","setQty","dispatch","listDetails","state","goodsDetails","loading","goods","error","userLogin","userInfo","params","id","addToCartHandler","push","backgroundColor","color","border","borderRadius","marginTop","marginBottom","goods_name","goods_pic","goods_price","goods_details","countInStock","product","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  FormControl,\n} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Meta from '../components/Meta'\nimport {\n  listGoodstDetails,\n  // createProductReview,\n} from '../actions/GoodsActions'\n// import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  // const [rating, setRating] = useState(0)\n  // const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const listDetails = useSelector((state) => state.goodsDetails)\n  const { loading, goods, error } = listDetails\n\n  // const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  // const {\n  //   success: successProductReview,\n  //   error: errorProductReview,\n  // } = productReviewCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    // if (successProductReview) {\n    //   alert('Review Submitted!')\n    //   setRating(0)\n    //   setComment('')\n    //   dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    // }\n    dispatch(listGoodstDetails(match.params.id))\n  }, [dispatch, match.params.id, \n    // successProductReview\n  ])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}/?qty=${qty}`)\n  }\n\n  // const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(createProductReview(match.params.id, { rating, comment }))\n  // }\n\n  return (\n    <>\n      <Link\n        style={{\n          backgroundColor: 'rgb(63 57 63)',\n          color: 'white',\n          border: '2px solid pink',\n          borderRadius: '10px',\n          marginTop: '50px',\n          marginBottom: '10px',\n        }}\n        className='btn btn-light'\n        to='/'\n      >\n        Go Back\n      </Link>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <ErrorMessage variant='danger'>{error}</ErrorMessage>\n      ) : (\n        <>\n          <Meta title={goods.goods_name} />\n          <Row>\n            <Col md={6}>\n              <Image src={goods.goods_pic} alt={goods.goods_name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{goods.goods_name}</h3>\n                </ListGroup.Item>\n                {/* <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item> */}\n                <ListGroup.Item>Price: $ {goods.goods_price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Details: {goods.goods_details}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>$ {goods.goods_price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {goods.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <FormControl\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {/* this line mean if we have five item in the array it will show like this [0, 1, 2, 3, 4] */}\n                            {[...Array(goods.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </FormControl>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      style={{\n                        backgroundColor: 'rgb(63 57 63)',\n                      }}\n                      type='button'\n                      disabled={goods.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          {/* <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1- Poor</option>\n                          <option value='2'>2- Fair</option>\n                          <option value='3'>3- Good</option>\n                          <option value='4'>4- Very Good</option>\n                          <option value='5'>5- Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        type='submit'\n                        variant='primary'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row> */}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n"]},"metadata":{},"sourceType":"module"}