{"ast":null,"code":"import { GOODS_UPDATE_REQUEST, GOODS_UPDATE_SUCCESS, GOODS_UPDATE_FAIL, GOODS_CREATE_FAIL, GOODS_CREATE_REQUEST, GOODS_CREATE_SUCCESS, GOODS_DELETE_FAIL, GOODS_DELETE_REQUEST, GOODS_DELETE_SUCCESS, GOODS_LIST_FAIL, GOODS_LIST_REQUEST, GOODS_LIST_SUCCESS, GOODS_DETAILS_REQUEST, GOODS_DETAILS_SUCCESS, GOODS_DETAILS_FAIL } from \"../constants/goodsConstants\";\nimport axios from \"axios\";\nexport const listGoods = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: GOODS_LIST_REQUEST\n      });\n      const {\n        userLogin: {\n          userInfo\n        }\n      } = getState();\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/goods?keyword=${keyword}&pageNumber=${pageNumber}`, config);\n      dispatch({\n        type: GOODS_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n      dispatch({\n        type: GOODS_LIST_FAIL,\n        payload: message\n      });\n    }\n  };\n};\nexport const listGoodsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: GOODS_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/goods/${id}`);\n    dispatch({\n      type: GOODS_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GOODS_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createGoodsAction = (goods_name, goods_details, goods_category, goods_pic, goods_price) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GOODS_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/goods/create`, {\n      goods_name,\n      goods_details,\n      goods_category,\n      goods_price,\n      goods_pic\n    }, config);\n    dispatch({\n      type: GOODS_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GOODS_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // export const deleteGoodsAction = (id) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: GOODS_DELETE_REQUEST,\n//     });\n//     const {\n//       userLogin: { userInfo },\n//     } = getState();\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n//     const { data } = await axios.delete(`/api/goods/${id}`, config);\n//     dispatch({\n//       type: GOODS_DELETE_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: GOODS_DELETE_FAIL,\n//       payload: message,\n//     });\n//   }\n// };\n// export const updateGoodsAction = (id, title, content, category) => async (\n//   dispatch,\n//   getState\n// ) => {\n//   try {\n//     dispatch({\n//       type: GOODS_UPDATE_REQUEST,\n//     });\n//     const {\n//       userLogin: { userInfo },\n//     } = getState();\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n//     const { data } = await axios.put(\n//       `/api/goods/${id}`,\n//       { title, content, category },\n//       config\n//     );\n//     dispatch({\n//       type: GOODS_UPDATE_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({\n//       type: GOODS_UPDATE_FAIL,\n//       payload: message,\n//     });\n//   }\n// };","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/goodsActions.js"],"names":["GOODS_UPDATE_REQUEST","GOODS_UPDATE_SUCCESS","GOODS_UPDATE_FAIL","GOODS_CREATE_FAIL","GOODS_CREATE_REQUEST","GOODS_CREATE_SUCCESS","GOODS_DELETE_FAIL","GOODS_DELETE_REQUEST","GOODS_DELETE_SUCCESS","GOODS_LIST_FAIL","GOODS_LIST_REQUEST","GOODS_LIST_SUCCESS","GOODS_DETAILS_REQUEST","GOODS_DETAILS_SUCCESS","GOODS_DETAILS_FAIL","axios","listGoods","keyword","pageNumber","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","listGoodsDetails","id","createGoodsAction","goods_name","goods_details","goods_category","goods_pic","goods_price","post"],"mappings":"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","sourcesContent":["import {\r\n    GOODS_UPDATE_REQUEST,\r\n    GOODS_UPDATE_SUCCESS,\r\n    GOODS_UPDATE_FAIL,\r\n    GOODS_CREATE_FAIL,\r\n    GOODS_CREATE_REQUEST,\r\n    GOODS_CREATE_SUCCESS,\r\n    GOODS_DELETE_FAIL,\r\n    GOODS_DELETE_REQUEST,\r\n    GOODS_DELETE_SUCCESS,\r\n    GOODS_LIST_FAIL,\r\n    GOODS_LIST_REQUEST,\r\n    GOODS_LIST_SUCCESS,\r\n    GOODS_DETAILS_REQUEST,\r\n    GOODS_DETAILS_SUCCESS,\r\n    GOODS_DETAILS_FAIL,\r\n  } from \"../constants/goodsConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const listGoods = (keyword = '', pageNumber = '') => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_LIST_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/goods?keyword=${keyword}&pageNumber=${pageNumber}`, config);\r\n  \r\n      dispatch({\r\n        type: GOODS_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listGoodsDetails = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GOODS_DETAILS_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/goods/${id}`)\r\n  \r\n      dispatch({ type: GOODS_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const createGoodsAction = (goods_name, goods_details, goods_category, goods_pic, goods_price\r\n    ) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/goods/create`,\r\n        { goods_name, goods_details, goods_category, goods_price, goods_pic },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: GOODS_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  // export const deleteGoodsAction = (id) => async (dispatch, getState) => {\r\n  //   try {\r\n  //     dispatch({\r\n  //       type: GOODS_DELETE_REQUEST,\r\n  //     });\r\n  \r\n  //     const {\r\n  //       userLogin: { userInfo },\r\n  //     } = getState();\r\n  \r\n  //     const config = {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${userInfo.token}`,\r\n  //       },\r\n  //     };\r\n  \r\n  //     const { data } = await axios.delete(`/api/goods/${id}`, config);\r\n  \r\n  //     dispatch({\r\n  //       type: GOODS_DELETE_SUCCESS,\r\n  //       payload: data,\r\n  //     });\r\n  //   } catch (error) {\r\n  //     const message =\r\n  //       error.response && error.response.data.message\r\n  //         ? error.response.data.message\r\n  //         : error.message;\r\n  //     dispatch({\r\n  //       type: GOODS_DELETE_FAIL,\r\n  //       payload: message,\r\n  //     });\r\n  //   }\r\n  // };\r\n  \r\n  // export const updateGoodsAction = (id, title, content, category) => async (\r\n  //   dispatch,\r\n  //   getState\r\n  // ) => {\r\n  //   try {\r\n  //     dispatch({\r\n  //       type: GOODS_UPDATE_REQUEST,\r\n  //     });\r\n  \r\n  //     const {\r\n  //       userLogin: { userInfo },\r\n  //     } = getState();\r\n  \r\n  //     const config = {\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         Authorization: `Bearer ${userInfo.token}`,\r\n  //       },\r\n  //     };\r\n  \r\n  //     const { data } = await axios.put(\r\n  //       `/api/goods/${id}`,\r\n  //       { title, content, category },\r\n  //       config\r\n  //     );\r\n  \r\n  //     dispatch({\r\n  //       type: GOODS_UPDATE_SUCCESS,\r\n  //       payload: data,\r\n  //     });\r\n  //   } catch (error) {\r\n  //     const message =\r\n  //       error.response && error.response.data.message\r\n  //         ? error.response.data.message\r\n  //         : error.message;\r\n  //     dispatch({\r\n  //       type: GOODS_UPDATE_FAIL,\r\n  //       payload: message,\r\n  //     });\r\n  //   }\r\n  // };"]},"metadata":{},"sourceType":"module"}