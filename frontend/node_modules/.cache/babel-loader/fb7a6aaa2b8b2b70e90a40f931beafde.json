{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (name, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      name,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","axios","login","name","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","email","updateProfile","user","getState","userLogin","userInfo","Authorization","token","listUsers","get","deleteUser","id","delete","updateUser","put","_id","USER_DETAILS_SUCCESS"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n  } from \"../constants/userConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const login = (name, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_LOGIN_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"/api/users/login\",\r\n        { name, password },\r\n        config\r\n      );\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n  };\r\n  \r\n  export const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"/api/users\",\r\n        { name, email, password },\r\n        config\r\n      );\r\n  \r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n  \r\n      dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/users`, config)\r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      await axios.delete(`/api/users/${id}`, config)\r\n      dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}