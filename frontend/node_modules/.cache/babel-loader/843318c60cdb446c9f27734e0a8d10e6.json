{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { cartReducer } from './reducers/cartReducer';\nimport { goodsCreateReducer, goodsDeleteReducer, goodsListReducer, goodsUpdateReducer, goodsDetailReducer, goodsTopRatedReducer, goodsBestSalesReducer, goodsSpecialReducer, goodsReviewCreateReducer } from \"./reducers/goodsReducers\";\nimport { orderCreatedReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer, orderDeleteReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cart: cartReducer,\n  goodsCreate: goodsCreateReducer,\n  goodsDelete: goodsDeleteReducer,\n  goodsUpdate: goodsUpdateReducer,\n  goodsList: goodsListReducer,\n  goodsDetails: goodsDetailReducer,\n  goodsTopRated: goodsTopRatedReducer,\n  goodsSpecial: goodsSpecialReducer,\n  goodsBestSales: goodsBestSalesReducer,\n  goodsReviewCreate: goodsReviewCreateReducer,\n  orderCreate: orderCreatedReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  delettOrder: orderDeleteReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItemsFromStorge = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorge = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorge,\n    shippingAddress: shippingAddressFromStorge\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/FYP demo/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartReducer","goodsCreateReducer","goodsDeleteReducer","goodsListReducer","goodsUpdateReducer","goodsDetailReducer","goodsTopRatedReducer","goodsBestSalesReducer","goodsSpecialReducer","goodsReviewCreateReducer","orderCreatedReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","orderDeleteReducer","reducer","userLogin","userRegister","userUpdate","userList","userDelete","userDetails","userUpdateProfile","cart","goodsCreate","goodsDelete","goodsUpdate","goodsList","goodsDetails","goodsTopRated","goodsSpecial","goodsBestSales","goodsReviewCreate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","delettOrder","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorge","shippingAddressFromStorge","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport {\r\n  goodsCreateReducer,\r\n  goodsDeleteReducer,\r\n  goodsListReducer,\r\n  goodsUpdateReducer,\r\n  goodsDetailReducer,\r\n  goodsTopRatedReducer,\r\n  goodsBestSalesReducer,\r\n  goodsSpecialReducer,\r\n  goodsReviewCreateReducer\r\n} from \"./reducers/goodsReducers\";\r\nimport {\r\n  orderCreatedReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n  orderDeleteReducer,\r\n} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  cart: cartReducer,\r\n  goodsCreate: goodsCreateReducer,\r\n  goodsDelete: goodsDeleteReducer,\r\n  goodsUpdate: goodsUpdateReducer,\r\n  goodsList: goodsListReducer,\r\n  goodsDetails: goodsDetailReducer,\r\n  goodsTopRated:goodsTopRatedReducer,\r\n  goodsSpecial:goodsSpecialReducer,\r\n  goodsBestSales:goodsBestSalesReducer,\r\n  goodsReviewCreate: goodsReviewCreateReducer,\r\n  orderCreate: orderCreatedReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  delettOrder: orderDeleteReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst cartItemsFromStorge = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst shippingAddressFromStorge = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorge,\r\n    shippingAddress: shippingAddressFromStorge,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}