{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM_REQUEST, CART_ADD_ITEM_SUCCESS, CART_ADD_ITEM_FAIL, CART_REMOVE_ITEM_REQUEST, CART_REMOVE_ITEM_SUCCESS, CART_REMOVE_ITEM_FAIL, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'; // (getState.js) allows as to get what ever we want from our state in the store.js\n\nexport const addToCart = cart => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_ADD_ITEM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/goods/:id`, cart, config);\n    dispatch({\n      type: CART_ADD_ITEM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeFromCart = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_REMOVE_ITEM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/cart/${id}`, config);\n    dispatch({\n      type: CART_REMOVE_ITEM_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: CART_REMOVE_ITEM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/cartAction.js"],"names":["axios","CART_ADD_ITEM_REQUEST","CART_ADD_ITEM_SUCCESS","CART_ADD_ITEM_FAIL","CART_REMOVE_ITEM_REQUEST","CART_REMOVE_ITEM_SUCCESS","CART_REMOVE_ITEM_FAIL","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","cart","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","removeFromCart","id","delete","saveShippingAddress","localStorage","setItem","JSON","stringify","savePaymentMethod"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  CART_ADD_ITEM_REQUEST,\n  CART_ADD_ITEM_SUCCESS,\n  CART_ADD_ITEM_FAIL,\n  CART_REMOVE_ITEM_REQUEST,\n  CART_REMOVE_ITEM_SUCCESS,\n  CART_REMOVE_ITEM_FAIL,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n// (getState.js) allows as to get what ever we want from our state in the store.js\nexport const addToCart = (cart) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_ADD_ITEM_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n  const { data } = await axios.post(`/goods/:id`, cart, config)\n  dispatch({\n    type: CART_ADD_ITEM_SUCCESS,\n    payload: data\n  })\n\n} catch (error) {\n  dispatch({\n    type: CART_ADD_ITEM_FAIL,\n    payload:\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n  })\n}\n}\n\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CART_REMOVE_ITEM_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    await axios.delete(`/api/cart/${id}`, config)\n  dispatch({\n    type: CART_REMOVE_ITEM_SUCCESS,\n  })\n\n} catch (error) {\n  dispatch({\n    type: CART_REMOVE_ITEM_FAIL,\n    payload:\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n  })\n}\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n"]},"metadata":{},"sourceType":"module"}