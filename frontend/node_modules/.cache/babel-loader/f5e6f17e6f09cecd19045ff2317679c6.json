{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP demo\\\\frontend\\\\src\\\\views\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FormContainer from '../components/FormContainer';\nimport { listGoodsDetails, updateGoods } from '../actions/goodsActions';\nimport { GOODS_UPDATE_RESET } from '../constants/goodsConstants'; // import { app } from '../base'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0); // const [image, setImage] = useState('')\n  // const [brand, setBrand] = useState('')\n\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [picMessage, setPicMessage] = useState(null);\n  const [goods_pic, setGoods_pic] = useState(\"\"); // const [imageURL, setImageURL] = useState('')\n\n  const dispatch = useDispatch();\n  const goodsDetails = useSelector(state => state.goodsDetails);\n  const {\n    loading,\n    error,\n    goods\n  } = goodsDetails;\n  const goodsUpdate = useSelector(state => state.goodsUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = goodsUpdate; // const onFileChange = async (e) => {\n  //   const file = e.target.files[0]\n  //   const storageRef = app.storage().ref()\n  //   const fileRef = storageRef.child(file.name)\n  //   await fileRef.put(file)\n  //   setImageURL(await fileRef.getDownloadURL())\n  // }\n\n  const postDetails = pics => {\n    if (pics === \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\") {\n      return setPicMessage(\"Please Select an Image\");\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"goods_pic\");\n      data.append(\"cloud_name\", \"fyp2022\");\n      fetch(\"https://api.cloudinary.com/v1_1/fyp2022/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setGoods_pic(data.url.toString());\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: GOODS_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!goods.goods_name || goods._id !== productId) {\n        dispatch(listGoodsDetails(productId));\n      } else {\n        setName(goods.goods_name);\n        setPrice(goods.goods_price);\n        setGoods_pic(goods.goods_pic); // setBrand(product.brand)\n\n        setCategory(goods.category);\n        setCountInStock(goods.countInStock);\n        setDescription(goods.goods_details);\n      }\n    }\n  }, [dispatch, history, goods, productId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateGoods({\n      _id: productId,\n      name,\n      price,\n      goods_pic,\n      // brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), goods_pic === '' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => postDetails(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image Selected !!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), goods_pic === '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            height: \"100\",\n            width: \"100\",\n            src: goods_pic,\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Details \",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"GTWeNX2wVjEKTZJwbWMmTKYL8kw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["D:/FYP demo/frontend/src/views/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loading","ErrorMessage","FormContainer","listGoodsDetails","updateGoods","GOODS_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","category","setCategory","countInStock","setCountInStock","description","setDescription","picMessage","setPicMessage","goods_pic","setGoods_pic","dispatch","goodsDetails","state","loading","error","goods","goodsUpdate","loadingUpdate","errorUpdate","success","successUpdate","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","push","goods_name","_id","goods_price","goods_details","submitHandler","e","preventDefault","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FormContainer from '../components/FormContainer'\nimport { listGoodsDetails, updateGoods } from '../actions/goodsActions'\nimport { GOODS_UPDATE_RESET } from '../constants/goodsConstants'\n// import { app } from '../base'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  // const [image, setImage] = useState('')\n  // const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [picMessage, setPicMessage] = useState(null);\n  const [goods_pic, setGoods_pic] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n\n  const dispatch = useDispatch()\n\n  const goodsDetails = useSelector((state) => state.goodsDetails)\n  const { loading, error, goods } = goodsDetails\n\n  const goodsUpdate = useSelector((state) => state.goodsUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = goodsUpdate\n\n  // const onFileChange = async (e) => {\n  //   const file = e.target.files[0]\n  //   const storageRef = app.storage().ref()\n  //   const fileRef = storageRef.child(file.name)\n  //   await fileRef.put(file)\n  //   setImageURL(await fileRef.getDownloadURL())\n  // }\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"goods_pic\");\n      data.append(\"cloud_name\", \"fyp2022\");\n      fetch(\"https://api.cloudinary.com/v1_1/fyp2022/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setGoods_pic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: GOODS_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!goods.goods_name || goods._id !== productId) {\n        dispatch(listGoodsDetails(productId))\n      } else {\n        setName(goods.goods_name)\n        setPrice(goods.goods_price)\n        setGoods_pic(goods.goods_pic)\n        // setBrand(product.brand)\n        setCategory(goods.category)\n        setCountInStock(goods.countInStock)\n        setDescription(goods.goods_details)\n      }\n    }\n  }, [dispatch, history, goods, productId, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateGoods({\n        _id: productId,\n        name,\n        price,\n        goods_pic,\n        // brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loading />}\n        {errorUpdate && <ErrorMessage variant='danger'>{errorUpdate}</ErrorMessage>}\n\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <ErrorMessage variant='danger'>{error}</ErrorMessage>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              {goods_pic === '' ? (\n                <input type='file' onChange={(e) => postDetails(e.target.files[0])} />\n              ) : (\n                <p>Image Selected !!!!</p>\n              )}\n\n              {goods_pic === '' ? (\n                <p>no image</p>\n              ) : (\n                <img height='100' width='100' src={goods_pic} alt={name} />\n              )}\n            </Form.Group>\n\n            {/* <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group> */}\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Details</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Details '\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n"]},"metadata":{},"sourceType":"module"}