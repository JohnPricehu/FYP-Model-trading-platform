{"ast":null,"code":"import { GOODS_UPDATE_REQUEST, GOODS_UPDATE_SUCCESS, GOODS_UPDATE_FAIL, GOODS_CREATE_FAIL, GOODS_CREATE_REQUEST, GOODS_CREATE_SUCCESS, GOODS_DELETE_FAIL, GOODS_DELETE_REQUEST, GOODS_DELETE_SUCCESS, GOODS_LIST_FAIL, GOODS_LIST_REQUEST, GOODS_LIST_SUCCESS } from \"../constants/goodsConstants\";\nimport axios from \"axios\";\nexport const listGoods = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GOODS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/goods`, config);\n    dispatch({\n      type: GOODS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GOODS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createGoodsAction = (goods_name, goods_details, goods_category, goods_pic) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GOODS_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/goods/create`, {\n      goods_name,\n      goods_details,\n      goods_category,\n      goods_pic\n    }, config);\n    dispatch({\n      type: GOODS_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GOODS_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteGoodsAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GOODS_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/goods/${id}`, config);\n    dispatch({\n      type: GOODS_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GOODS_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateGoodsAction = (id, title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GOODS_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/goods/${id}`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: GOODS_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: GOODS_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/goodsActions.js"],"names":["GOODS_UPDATE_REQUEST","GOODS_UPDATE_SUCCESS","GOODS_UPDATE_FAIL","GOODS_CREATE_FAIL","GOODS_CREATE_REQUEST","GOODS_CREATE_SUCCESS","GOODS_DELETE_FAIL","GOODS_DELETE_REQUEST","GOODS_DELETE_SUCCESS","GOODS_LIST_FAIL","GOODS_LIST_REQUEST","GOODS_LIST_SUCCESS","axios","listGoods","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createGoodsAction","goods_name","goods_details","goods_category","goods_pic","post","deleteGoodsAction","id","delete","updateGoodsAction","title","content","category","put"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,iBAJJ,EAKIC,oBALJ,EAMIC,oBANJ,EAOIC,iBAPJ,EAQIC,oBARJ,EASIC,oBATJ,EAUIC,eAVJ,EAWIC,kBAXJ,EAYIC,kBAZJ,QAaS,6BAbT;AAcE,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC3D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAIA,UAAM;AACJO,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,YAAX,EAAwBL,MAAxB,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEL,kBADC;AAEPc,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,eADC;AAEPgB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhCM;AAkCP,OAAO,MAAME,iBAAiB,GAAG,CAACC,UAAD,EAAaC,aAAb,EAA4BC,cAA5B,EAA4CC,SAA5C,KAA0D,OACzFnB,QADyF,EAEzFC,QAFyF,KAGtF;AACH,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAIA,UAAM;AACJa,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACsB,IAAN,CACpB,mBADoB,EAErB;AAAEJ,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BC,MAAAA,cAA7B;AAA6CC,MAAAA;AAA7C,KAFqB,EAGrBd,MAHqB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,oBADC;AAEPoB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GA1BD,CA0BE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,iBADC;AAEPsB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAxCM;AA0CP,OAAO,MAAMQ,iBAAiB,GAAIC,EAAD,IAAQ,OAAOtB,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAIA,UAAM;AACJU,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACyB,MAAN,CAAc,cAAaD,EAAG,EAA9B,EAAiCjB,MAAjC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,oBADC;AAEPiB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEV,iBADC;AAEPmB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAhCM;AAkCP,OAAO,MAAMW,iBAAiB,GAAG,CAACF,EAAD,EAAKG,KAAL,EAAYC,OAAZ,EAAqBC,QAArB,KAAkC,OACjE3B,QADiE,EAEjEC,QAFiE,KAG9D;AACH,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEhB;AADC,KAAD,CAAR;AAIA,UAAM;AACJiB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAAC8B,GAAN,CACpB,cAAaN,EAAG,EADI,EAErB;AAAEG,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAFqB,EAGrBtB,MAHqB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,oBADC;AAEPwB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GA1BD,CA0BE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,iBADC;AAEPuB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CAxCM","sourcesContent":["import {\r\n    GOODS_UPDATE_REQUEST,\r\n    GOODS_UPDATE_SUCCESS,\r\n    GOODS_UPDATE_FAIL,\r\n    GOODS_CREATE_FAIL,\r\n    GOODS_CREATE_REQUEST,\r\n    GOODS_CREATE_SUCCESS,\r\n    GOODS_DELETE_FAIL,\r\n    GOODS_DELETE_REQUEST,\r\n    GOODS_DELETE_SUCCESS,\r\n    GOODS_LIST_FAIL,\r\n    GOODS_LIST_REQUEST,\r\n    GOODS_LIST_SUCCESS,\r\n  } from \"../constants/goodsConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const listGoods = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_LIST_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/goods`, config);\r\n  \r\n      dispatch({\r\n        type: GOODS_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const createGoodsAction = (goods_name, goods_details, goods_category, goods_pic) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/goods/create`,\r\n        { goods_name, goods_details, goods_category, goods_pic },\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: GOODS_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const deleteGoodsAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_DELETE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: GOODS_DELETE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_DELETE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateGoodsAction = (id, title, content, category) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_UPDATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/goods/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n  \r\n      dispatch({\r\n        type: GOODS_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}