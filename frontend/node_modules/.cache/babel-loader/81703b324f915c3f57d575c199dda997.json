{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { goodsCreateReducer, goodsDeleteReducer, goodsListReducer, goodsUpdateReducer, goodsDetailReducer, goodsTopRatedReducer } from \"./reducers/goodsReducers\";\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  goodsCreate: goodsCreateReducer,\n  goodseDelete: goodsDeleteReducer,\n  goodsUpdate: goodsUpdateReducer,\n  goodsList: goodsListReducer,\n  goodsDetails: goodsDetailReducer,\n  goodsTopRated: goodsTopRatedReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/FYP demo/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userUpdateReducer","goodsCreateReducer","goodsDeleteReducer","goodsListReducer","goodsUpdateReducer","goodsDetailReducer","goodsTopRatedReducer","reducer","userLogin","userRegister","userUpdate","goodsCreate","goodseDelete","goodsUpdate","goodsList","goodsDetails","goodsTopRated","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,yBAJP;AAKA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,oBANF,QAOO,0BAPP;AAUA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC9Bc,EAAAA,SAAS,EAAEV,gBADmB;AAE9BW,EAAAA,YAAY,EAAEV,mBAFgB;AAG9BW,EAAAA,UAAU,EAAEV,iBAHkB;AAI9BW,EAAAA,WAAW,EAAEV,kBAJiB;AAK9BW,EAAAA,YAAY,EAAEV,kBALgB;AAM9BW,EAAAA,WAAW,EAAET,kBANiB;AAO9BU,EAAAA,SAAS,EAAEX,gBAPmB;AAQ9BY,EAAAA,YAAY,EAAEV,kBARgB;AAS9BW,EAAAA,aAAa,EAACV;AATgB,CAAD,CAA/B;AAYA,MAAMW,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBd,EAAAA,SAAS,EAAE;AAAEe,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAC5B,KAAD,CAAnB;AAEA,MAAM6B,KAAK,GAAGhC,WAAW,CACvBc,OADuB,EAEvBe,YAFuB,EAGvBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG6B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  goodsCreateReducer,\r\n  goodsDeleteReducer,\r\n  goodsListReducer,\r\n  goodsUpdateReducer,\r\n  goodsDetailReducer,\r\n  goodsTopRatedReducer\r\n} from \"./reducers/goodsReducers\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  goodsCreate: goodsCreateReducer,\r\n  goodseDelete: goodsDeleteReducer,\r\n  goodsUpdate: goodsUpdateReducer,\r\n  goodsList: goodsListReducer,\r\n  goodsDetails: goodsDetailReducer,\r\n  goodsTopRated:goodsTopRatedReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}