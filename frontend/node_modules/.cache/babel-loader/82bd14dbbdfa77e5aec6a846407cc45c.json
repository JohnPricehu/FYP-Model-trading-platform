{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, userPayReducer } from \"./reducers/userReducers\";\nimport { cartReducer } from './reducers/cartReducer';\nimport { goodsCreateReducer, goodsDeleteReducer, goodsListReducer, goodsAllListReducer, goodsUpdateReducer, goodsDetailReducer, goodsTopRatedReducer, goodsBestSalesReducer, goodsSpecialReducer, goodsMyReducer, goodsReviewCreateReducer } from \"./reducers/goodsReducers\";\nimport { orderCreatedReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer, orderDeleteReducer } from './reducers/orderReducers';\nimport { addFavouriteReducer, deleteFavouriteReducer, myFavouriteReducer } from './reducers/favouriteReducers';\nimport { addWantedReducer, deleteWantedReducer, myWantedReducer } from './reducers/wantedReducers';\nimport { addHistoryReducer, myHistoryReducer } from './reducers/historyReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  cart: cartReducer,\n  goodsCreate: goodsCreateReducer,\n  goodsDelete: goodsDeleteReducer,\n  goodsUpdate: goodsUpdateReducer,\n  goodsList: goodsListReducer,\n  goodsListAll: goodsAllListReducer,\n  goodsDetails: goodsDetailReducer,\n  goodsTopRated: goodsTopRatedReducer,\n  goodsSpecial: goodsSpecialReducer,\n  goodsBestSales: goodsBestSalesReducer,\n  goodsReviewCreate: goodsReviewCreateReducer,\n  goodsMy: goodsMyReducer,\n  orderCreate: orderCreatedReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  delettOrder: orderDeleteReducer,\n  addFavourite: addFavouriteReducer,\n  deleteFavourite: deleteFavouriteReducer,\n  myFavourite: myFavouriteReducer,\n  addWanted: addWantedReducer,\n  deleteWanted: deleteWantedReducer,\n  myWanted: myWantedReducer,\n  addHistory: addHistoryReducer,\n  myHistory: myHistoryReducer,\n  userPay: userPayReducer\n}); // const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\n//   : null;\n\nconst cartItemsFromStorge = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorge = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorge,\n    shippingAddress: shippingAddressFromStorge\n  } // userLogin: { userInfo: userInfoFromStorage },\n\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/FYP demo/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","userPayReducer","cartReducer","goodsCreateReducer","goodsDeleteReducer","goodsListReducer","goodsAllListReducer","goodsUpdateReducer","goodsDetailReducer","goodsTopRatedReducer","goodsBestSalesReducer","goodsSpecialReducer","goodsMyReducer","goodsReviewCreateReducer","orderCreatedReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","orderDeleteReducer","addFavouriteReducer","deleteFavouriteReducer","myFavouriteReducer","addWantedReducer","deleteWantedReducer","myWantedReducer","addHistoryReducer","myHistoryReducer","reducer","userLogin","userRegister","userUpdate","userList","userDelete","userDetails","userUpdateProfile","cart","goodsCreate","goodsDelete","goodsUpdate","goodsList","goodsListAll","goodsDetails","goodsTopRated","goodsSpecial","goodsBestSales","goodsReviewCreate","goodsMy","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","delettOrder","addFavourite","deleteFavourite","myFavourite","addWanted","deleteWanted","myWanted","addHistory","myHistory","userPay","cartItemsFromStorge","localStorage","getItem","JSON","parse","shippingAddressFromStorge","initialState","cartItems","shippingAddress","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n  userPayReducer\r\n} from \"./reducers/userReducers\";\r\nimport { cartReducer } from './reducers/cartReducer';\r\nimport {\r\n  goodsCreateReducer,\r\n  goodsDeleteReducer,\r\n  goodsListReducer,\r\n  goodsAllListReducer,\r\n  goodsUpdateReducer,\r\n  goodsDetailReducer,\r\n  goodsTopRatedReducer,\r\n  goodsBestSalesReducer,\r\n  goodsSpecialReducer,\r\n  goodsMyReducer,\r\n  goodsReviewCreateReducer\r\n} from \"./reducers/goodsReducers\";\r\nimport {\r\n  orderCreatedReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n  orderDeleteReducer,\r\n} from './reducers/orderReducers'\r\nimport {\r\n  addFavouriteReducer,\r\n  deleteFavouriteReducer,\r\n  myFavouriteReducer\r\n} from './reducers/favouriteReducers'\r\nimport {\r\n  addWantedReducer,\r\n  deleteWantedReducer,\r\n  myWantedReducer\r\n} from './reducers/wantedReducers'\r\nimport {\r\n  addHistoryReducer,\r\n  myHistoryReducer\r\n} from './reducers/historyReducers'\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  cart: cartReducer,\r\n  goodsCreate: goodsCreateReducer,\r\n  goodsDelete: goodsDeleteReducer,\r\n  goodsUpdate: goodsUpdateReducer,\r\n  goodsList: goodsListReducer,\r\n  goodsListAll: goodsAllListReducer,\r\n  goodsDetails: goodsDetailReducer,\r\n  goodsTopRated:goodsTopRatedReducer,\r\n  goodsSpecial:goodsSpecialReducer,\r\n  goodsBestSales:goodsBestSalesReducer,\r\n  goodsReviewCreate: goodsReviewCreateReducer,\r\n  goodsMy:goodsMyReducer,\r\n  orderCreate: orderCreatedReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  delettOrder: orderDeleteReducer,\r\n  addFavourite:addFavouriteReducer,\r\n  deleteFavourite:deleteFavouriteReducer,\r\n  myFavourite:myFavouriteReducer,\r\n  addWanted:addWantedReducer,\r\n  deleteWanted:deleteWantedReducer,\r\n  myWanted:myWantedReducer,\r\n  addHistory:addHistoryReducer,\r\n  myHistory:myHistoryReducer,\r\n  userPay:userPayReducer\r\n  \r\n});\r\n\r\n// const userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n//   ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n//   : null;\r\n\r\nconst cartItemsFromStorge = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst shippingAddressFromStorge = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorge,\r\n    shippingAddress: shippingAddressFromStorge,\r\n  },\r\n  // userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}