{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'; // (getState.js) allows as to get what ever we want from our state in the store.js\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/goods/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.goods_name,\n      image: data.goods_pic,\n      price: data.goods_price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["D:/FYP demo/frontend/src/actions/cartAction.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","goods_name","image","goods_pic","price","goods_price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,0BAHF,EAIEC,wBAJF,QAKO,4BALP,C,CAOA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,cAAaL,EAAG,EAA3B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEX,aADC;AAEPY,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACO,UAFJ;AAGPC,MAAAA,KAAK,EAAER,IAAI,CAACS,SAHL;AAIPC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WAJL;AAKPC,MAAAA,YAAY,EAAEZ,IAAI,CAACY,YALZ;AAMPf,MAAAA;AANO;AAFF,GAAD,CAAR;AAYAgB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIvB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEV,gBADC;AAEPW,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAKAiB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,0BADC;AAEPU,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAxC;AACD,CAPM;AASP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAER,wBADC;AAEPS,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAtC;AACD,CAPM","sourcesContent":["import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n// (getState.js) allows as to get what ever we want from our state in the store.js\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/goods/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.goods_name,\n      image: data.goods_pic,\n      price: data.goods_price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n"]},"metadata":{},"sourceType":"module"}