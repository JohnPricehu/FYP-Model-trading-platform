[{"D:\\FYP demo\\frontend\\src\\index.js":"1","D:\\FYP demo\\frontend\\src\\views\\home.js":"2","D:\\FYP demo\\frontend\\src\\views\\register-page.js":"3","D:\\FYP demo\\frontend\\src\\views\\sell-goods-page.js":"4","D:\\FYP demo\\frontend\\src\\components\\navigation-links.js":"5","D:\\FYP demo\\frontend\\src\\store.js":"6","D:\\FYP demo\\frontend\\src\\reducers\\userReducers.js":"7","D:\\FYP demo\\frontend\\src\\constants\\userConstants.js":"8","D:\\FYP demo\\frontend\\src\\actions\\userActions.js":"9","D:\\FYP demo\\frontend\\src\\actions\\goodsActions.js":"10","D:\\FYP demo\\frontend\\src\\constants\\goodsConstants.js":"11","D:\\FYP demo\\frontend\\src\\reducers\\goodsReducers.js":"12","D:\\FYP demo\\frontend\\src\\components\\Header.js":"13","D:\\FYP demo\\frontend\\src\\components\\Goods.js":"14","D:\\FYP demo\\frontend\\src\\components\\Paginate.js":"15","D:\\FYP demo\\frontend\\src\\components\\Loading.js":"16","D:\\FYP demo\\frontend\\src\\components\\ErrorMessage.js":"17","D:\\FYP demo\\frontend\\src\\components\\SearchBox.js":"18","D:\\FYP demo\\frontend\\src\\components\\Meta.js":"19","D:\\FYP demo\\frontend\\src\\components\\ProductCarousel.js":"20","D:\\FYP demo\\frontend\\src\\reducers\\cartReducer.js":"21","D:\\FYP demo\\frontend\\src\\constants\\cartConstants.js":"22","D:\\FYP demo\\frontend\\src\\views\\CartScreen.js":"23","D:\\FYP demo\\frontend\\src\\actions\\cartAction.js":"24","D:\\FYP demo\\frontend\\src\\views\\ProductScreen.js":"25","D:\\FYP demo\\frontend\\src\\views\\UserListScreen.js":"26","D:\\FYP demo\\frontend\\src\\views\\UserEditScreen.js":"27","D:\\FYP demo\\frontend\\src\\components\\FormContainer.js":"28","D:\\FYP demo\\frontend\\src\\views\\ProductListScreen.js":"29","D:\\FYP demo\\frontend\\src\\views\\ProductEditScreen.js":"30","D:\\FYP demo\\frontend\\src\\reducers\\orderReducers.js":"31","D:\\FYP demo\\frontend\\src\\constants\\orderConstants.js":"32","D:\\FYP demo\\frontend\\src\\views\\ShippingScreen.js":"33","D:\\FYP demo\\frontend\\src\\views\\OrderListScreen.js":"34","D:\\FYP demo\\frontend\\src\\views\\PaymentScreen.js":"35","D:\\FYP demo\\frontend\\src\\views\\PlaceOrderScreen.js":"36","D:\\FYP demo\\frontend\\src\\views\\orderScreen.js":"37","D:\\FYP demo\\frontend\\src\\actions\\orderAction.js":"38","D:\\FYP demo\\frontend\\src\\components\\CheckOutSteps.js":"39","D:\\FYP demo\\frontend\\src\\components\\Loader.js":"40","D:\\FYP demo\\frontend\\src\\components\\Rating.js":"41","D:\\FYP demo\\frontend\\src\\components\\memberSearchBox.js":"42","D:\\FYP demo\\frontend\\src\\views\\specialScreen.js":"43","D:\\FYP demo\\frontend\\src\\views\\ProfileScreen.js":"44","D:\\FYP demo\\frontend\\src\\components\\Footer.js":"45","D:\\FYP demo\\frontend\\src\\actions\\favouriteActions.js":"46","D:\\FYP demo\\frontend\\src\\constants\\favouriteConstants.js":"47","D:\\FYP demo\\frontend\\src\\reducers\\favouriteReducers.js":"48","D:\\FYP demo\\frontend\\src\\reducers\\wantedReducers.js":"49","D:\\FYP demo\\frontend\\src\\reducers\\historyReducers.js":"50","D:\\FYP demo\\frontend\\src\\constants\\wantedConstants.js":"51","D:\\FYP demo\\frontend\\src\\constants\\historyConstants.js":"52","D:\\FYP demo\\frontend\\src\\actions\\wantedActions.js":"53","D:\\FYP demo\\frontend\\src\\views\\favourites.js":"54","D:\\FYP demo\\frontend\\src\\views\\wanted.js":"55","D:\\FYP demo\\frontend\\src\\views\\history.js":"56","D:\\FYP demo\\frontend\\src\\views\\paymember.js":"57","D:\\FYP demo\\frontend\\src\\views\\loginScreen.js":"58","D:\\FYP demo\\frontend\\src\\actions\\historyAction.js":"59","D:\\FYP demo\\frontend\\src\\views\\RegisterScreen.js":"60","D:\\FYP demo\\frontend\\src\\views\\LoginScreen.js":"61"},{"size":4401,"mtime":1650834964332,"results":"62","hashOfConfig":"63"},{"size":4027,"mtime":1650747895867,"results":"64","hashOfConfig":"63"},{"size":9112,"mtime":1650761072970,"results":"65","hashOfConfig":"63"},{"size":6089,"mtime":1650764805330,"results":"66","hashOfConfig":"63"},{"size":543,"mtime":1640886082000,"results":"67","hashOfConfig":"63"},{"size":3305,"mtime":1650826205240,"results":"68","hashOfConfig":"63"},{"size":4557,"mtime":1650825967260,"results":"69","hashOfConfig":"63"},{"size":1716,"mtime":1650825849933,"results":"70","hashOfConfig":"63"},{"size":7288,"mtime":1650828774578,"results":"71","hashOfConfig":"63"},{"size":9244,"mtime":1649978568600,"results":"72","hashOfConfig":"63"},{"size":2195,"mtime":1649978385832,"results":"73","hashOfConfig":"63"},{"size":6364,"mtime":1650750472193,"results":"74","hashOfConfig":"63"},{"size":4246,"mtime":1650822227900,"results":"75","hashOfConfig":"63"},{"size":3032,"mtime":1650830586888,"results":"76","hashOfConfig":"63"},{"size":976,"mtime":1648601474899,"results":"77","hashOfConfig":"63"},{"size":485,"mtime":1646798074108,"results":"78","hashOfConfig":"63"},{"size":289,"mtime":1646798068551,"results":"79","hashOfConfig":"63"},{"size":871,"mtime":1647397088807,"results":"80","hashOfConfig":"63"},{"size":460,"mtime":1646967972586,"results":"81","hashOfConfig":"63"},{"size":1235,"mtime":1647311280516,"results":"82","hashOfConfig":"63"},{"size":1127,"mtime":1614202196000,"results":"83","hashOfConfig":"63"},{"size":1052,"mtime":1649977949183,"results":"84","hashOfConfig":"63"},{"size":4605,"mtime":1650756718686,"results":"85","hashOfConfig":"63"},{"size":1299,"mtime":1650755601229,"results":"86","hashOfConfig":"63"},{"size":13461,"mtime":1650836743876,"results":"87","hashOfConfig":"63"},{"size":3190,"mtime":1647426627402,"results":"88","hashOfConfig":"63"},{"size":4082,"mtime":1648608965688,"results":"89","hashOfConfig":"63"},{"size":331,"mtime":1614202196000,"results":"90","hashOfConfig":"63"},{"size":4332,"mtime":1650828307683,"results":"91","hashOfConfig":"63"},{"size":6941,"mtime":1647995841943,"results":"92","hashOfConfig":"63"},{"size":4063,"mtime":1614202196000,"results":"93","hashOfConfig":"63"},{"size":1360,"mtime":1614202196000,"results":"94","hashOfConfig":"63"},{"size":2656,"mtime":1614202196000,"results":"95","hashOfConfig":"63"},{"size":3259,"mtime":1648512545348,"results":"96","hashOfConfig":"63"},{"size":1905,"mtime":1648004526882,"results":"97","hashOfConfig":"63"},{"size":5487,"mtime":1650756962244,"results":"98","hashOfConfig":"63"},{"size":7088,"mtime":1650835700135,"results":"99","hashOfConfig":"63"},{"size":5405,"mtime":1648004272938,"results":"100","hashOfConfig":"63"},{"size":1242,"mtime":1614202196000,"results":"101","hashOfConfig":"63"},{"size":382,"mtime":1614202196000,"results":"102","hashOfConfig":"103"},{"size":1558,"mtime":1614202196000,"results":"104","hashOfConfig":"63"},{"size":928,"mtime":1648604061584,"results":"105","hashOfConfig":"63"},{"size":3069,"mtime":1648603979459,"results":"106","hashOfConfig":"63"},{"size":7639,"mtime":1650823581385,"results":"107","hashOfConfig":"63"},{"size":327,"mtime":1650748491526,"results":"108","hashOfConfig":"63"},{"size":2697,"mtime":1650812933559,"results":"109","hashOfConfig":"63"},{"size":596,"mtime":1650762923092,"results":"110","hashOfConfig":"63"},{"size":1660,"mtime":1650811165321,"results":"111","hashOfConfig":"63"},{"size":1578,"mtime":1650816051962,"results":"112","hashOfConfig":"63"},{"size":1084,"mtime":1650816157574,"results":"113","hashOfConfig":"63"},{"size":534,"mtime":1650815875878,"results":"114","hashOfConfig":"63"},{"size":366,"mtime":1650815865370,"results":"115","hashOfConfig":"63"},{"size":2592,"mtime":1650816767160,"results":"116","hashOfConfig":"63"},{"size":3245,"mtime":1650821111122,"results":"117","hashOfConfig":"63"},{"size":3409,"mtime":1650838719014,"results":"118","hashOfConfig":"63"},{"size":2624,"mtime":1650830173220,"results":"119","hashOfConfig":"63"},{"size":1774,"mtime":1650828590969,"results":"120","hashOfConfig":"63"},{"size":1951,"mtime":1650829359525,"results":"121","hashOfConfig":"63"},{"size":1720,"mtime":1650816835623,"results":"122","hashOfConfig":"63"},{"size":3340,"mtime":1650834577738,"results":"123","hashOfConfig":"63"},{"size":2168,"mtime":1650833147445,"results":"124","hashOfConfig":"63"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"pz614a",{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"127"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"127"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"127"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"127"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"127"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"127"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"127"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g7h8gx",{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"127"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"127"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"127"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"127"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"D:\\FYP demo\\frontend\\src\\index.js",[],["265","266"],"D:\\FYP demo\\frontend\\src\\views\\home.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport Goods from \"../components/Goods\"\nimport {listGoods,listBestSalesGoods,listSpecialGoods} from \"../actions/goodsActions\"\nimport NavigationLinks from '../components/navigation-links'\nimport projectStyles from '../style.module.css'\n// import styles from './home.module.css'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\nimport ProductCarousel from '../components/ProductCarousel'\nimport {\n  Row,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\n\nconst Home = ({ \n  match \n}) => {\n\n  // const history = useHistory();\n  const keyword = match.params.keyword\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const goodsList = useSelector((state) => state.goodsList)\n  const { loading, error, goods,\n     page, pages\n    } = goodsList;\n\n    useEffect(() => {\n      dispatch(listGoods(\n        keyword, pageNumber\n        ))\n    }, [dispatch, \n      keyword, pageNumber\n    ]);\n\n  const goodsBestSales = useSelector((state) => state.goodsBestSales)\n  const {bsgoods } = goodsBestSales\n  \n    useEffect(() => {\n      dispatch(listBestSalesGoods())\n    }, [dispatch])\n\n  // const goodsSpecial = useSelector((state) => state.goodsSpecial)\n  // const {sgoods } = goodsSpecial\n  \n  //   useEffect(() => {\n  //     dispatch(listSpecialGoods())\n  //   }, [dispatch])\n    \n  // const logoutHandler = () => {\n  //   dispatch(logout());\n  // };\n\n\n  // console.log(goods)\n  return (\n    <>\n    <Meta />\n    {!keyword ? (\n        <ProductCarousel />        \n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      {!keyword && (\n        loading ? (\n                <Loading />\n              ) : error ? (\n                <ErrorMessage variant='danger'>{error}</ErrorMessage>\n              ) : (\n                <>\n                <h1>Best-Sales models</h1>\n                <Row>\n                    {bsgoods.map((goods) => (\n                      <Col key={goods._id} sm={12} md={6} lg={4} xl={3}>\n                        <Goods goods={goods} />\n                      </Col>\n                    ))}\n                  </Row>\n                  </>\n                  // )}\n      ))}\n            {/* {!keyword && (\n              userInfo && userInfo.isMember  && (\n              loading ? (\n                <Loading />\n              ) : error ? (\n                <ErrorMessage variant='danger'>{error}</ErrorMessage>\n              ) : (\n                <>\n                <h1>Special models</h1>\n                <Row>\n                    {sgoods.map((goods) => (\n                      <Col key={goods._id} sm={12} md={6} lg={4} xl={3}>\n                        <Goods goods={goods} />\n                      </Col>\n                    ))}\n                  </Row>\n                  </>\n                  // )}\n      )))} */}\n      {!keyword ? (\n      <h1>All models</h1>\n      ) : (\n        <h1>Searched models</h1>\n        )}\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <ErrorMessage variant='danger'>{error}</ErrorMessage>\n      ) : (\n        <>\n        <Row>\n            {goods.map((goods) => (\n              <Col key={goods._id} sm={12} md={6} lg={4} xl={3}>\n                <Goods goods={goods} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n          </>\n        )}\n  </>\n  )\n}\n\nexport default Home","D:\\FYP demo\\frontend\\src\\views\\register-page.js",["281","282","283","284"],"import React, { useState, useEffect } from \"react\";\n// import { Link } from 'react-router-dom'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { Helmet } from 'react-helmet'\n// import axios from \"axios\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport NavigationLinks from '../components/navigation-links'\nimport projectStyles from '../style.module.css'\nimport styles from './register-page.module.css'\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { register } from \"../actions/userActions\";\n\nconst RegisterPage = ({history}) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  \n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async(e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else{\n      dispatch(register(name, email, password));\n    //   setMessage(null)\n    //   try {\n    //     const config = {\n    //       headers: {\n    //         \"Content-Type\": \"application/json\",\n    //       },\n    //     };\n  \n    //     setLoading(true);\n  \n    //     const {data} = await axios.post(\n    //       '/api/users',\n    //       {\n    //         name,\n    //         password,\n    //         email\n    //       },\n    //         config\n    //         );\n    //   console.log(data);\n    //   setLoading(false);\n    //   localStorage.setItem(\"userInfo\",JSON.stringify(data));\n\n    // }catch(error) {\n    //   setError(error.response.data.message);\n    //   setLoading(false);\n    // }\n    }\n\n  };\n  return (\n    <div className={styles['container']}>\n      \n      <Helmet>\n        <title>registerPage - FYP</title>\n        <meta property=\"og:title\" content=\"registerPage - FYP\" />\n      </Helmet>\n      <div className={styles['container1']}>\n      <Form onSubmit={submitHandler}>\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        \n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter Username\"\n          className={` ${styles['Input']} ${projectStyles['input']} `}\n          onChange={(e) => setName(e.target.value)}\n        />\n        \n        <input\n          type=\"password\"\n          value={password}\n          placeholder=\" Enter Password\"\n          className={` ${styles['textinput']} ${projectStyles['input']} `}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <span className={styles['text2']}>Confirm Password</span>\n        <input\n          type=\"password\"\n          value={confirmpassword}\n          placeholder=\"Confirm Password\"\n          className={` ${styles['textinput1']} ${projectStyles['input']} `}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n        \n        <input\n          type=\"email\"\n          value={email}\n          placeholder=\"Enter Email\"\n          className={` ${styles['textinput2']} ${projectStyles['input']} `}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <span className={styles['text']}>Username</span>\n        <span className={styles['text1']}>Password</span>\n        <span className={styles['text3']}>Email address</span>\n        <button className={` ${styles['button']} ${projectStyles['button']} `}\n         variant=\"primary\" type=\"submit\">\n          <span className={styles['text4']}>Register</span>\n        </button>\n        </Form>\n      </div>\n      <header className={styles['Header']}>\n        <img\n          alt=\"logo\"\n          src=\"https://presentation-website-assets.teleporthq.io/logos/logo.png\"\n          className={styles['image']}\n        />\n        <div className={styles['Nav']}>\n          <NavigationLinks rootClassName=\"rootClassName10\"></NavigationLinks>\n        </div>\n        <div className={styles['BtnGroup']}></div>\n        <div\n          className={` ${styles['MenuBurger']} ${projectStyles['teleport-menu-burger']} `}\n        >\n          <svg viewBox=\"0 0 1024 1024\" className={styles['icon']}>\n            <path d=\"M128 554.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667zM128 298.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667zM128 810.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667z\"></path>\n          </svg>\n        </div>\n        <div\n          className={` ${projectStyles['teleport-menu-mobile']} ${styles['MenuMobile']} `}\n        >\n          <div className={styles['Nav1']}>\n            <div className={styles['Container2']}>\n              <img\n                alt=\"image\"\n                src=\"https://presentation-website-assets.teleporthq.io/logos/logo.png\"\n                className={styles['image1']}\n              />\n              <div className={projectStyles['teleport-menu-close']}>\n                <svg viewBox=\"0 0 1024 1024\" className={styles['icon02']}>\n                  <path d=\"M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 238-238-238-238 60-60 238 238 238-238z\"></path>\n                </svg>\n              </div>\n            </div>\n            <NavigationLinks rootClassName=\"rootClassName11\"></NavigationLinks>\n          </div>\n          <div>\n            <svg\n              viewBox=\"0 0 950.8571428571428 1024\"\n              className={styles['icon04']}\n            >\n              <path d=\"M925.714 233.143c-25.143 36.571-56.571 69.143-92.571 95.429 0.571 8 0.571 16 0.571 24 0 244-185.714 525.143-525.143 525.143-104.571 0-201.714-30.286-283.429-82.857 14.857 1.714 29.143 2.286 44.571 2.286 86.286 0 165.714-29.143 229.143-78.857-81.143-1.714-149.143-54.857-172.571-128 11.429 1.714 22.857 2.857 34.857 2.857 16.571 0 33.143-2.286 48.571-6.286-84.571-17.143-148-91.429-148-181.143v-2.286c24.571 13.714 53.143 22.286 83.429 23.429-49.714-33.143-82.286-89.714-82.286-153.714 0-34.286 9.143-65.714 25.143-93.143 90.857 112 227.429 185.143 380.571 193.143-2.857-13.714-4.571-28-4.571-42.286 0-101.714 82.286-184.571 184.571-184.571 53.143 0 101.143 22.286 134.857 58.286 41.714-8 81.714-23.429 117.143-44.571-13.714 42.857-42.857 78.857-81.143 101.714 37.143-4 73.143-14.286 106.286-28.571z\"></path>\n            </svg>\n            <svg\n              viewBox=\"0 0 877.7142857142857 1024\"\n              className={styles['icon06']}\n            >\n              <path d=\"M585.143 512c0-80.571-65.714-146.286-146.286-146.286s-146.286 65.714-146.286 146.286 65.714 146.286 146.286 146.286 146.286-65.714 146.286-146.286zM664 512c0 124.571-100.571 225.143-225.143 225.143s-225.143-100.571-225.143-225.143 100.571-225.143 225.143-225.143 225.143 100.571 225.143 225.143zM725.714 277.714c0 29.143-23.429 52.571-52.571 52.571s-52.571-23.429-52.571-52.571 23.429-52.571 52.571-52.571 52.571 23.429 52.571 52.571zM438.857 152c-64 0-201.143-5.143-258.857 17.714-20 8-34.857 17.714-50.286 33.143s-25.143 30.286-33.143 50.286c-22.857 57.714-17.714 194.857-17.714 258.857s-5.143 201.143 17.714 258.857c8 20 17.714 34.857 33.143 50.286s30.286 25.143 50.286 33.143c57.714 22.857 194.857 17.714 258.857 17.714s201.143 5.143 258.857-17.714c20-8 34.857-17.714 50.286-33.143s25.143-30.286 33.143-50.286c22.857-57.714 17.714-194.857 17.714-258.857s5.143-201.143-17.714-258.857c-8-20-17.714-34.857-33.143-50.286s-30.286-25.143-50.286-33.143c-57.714-22.857-194.857-17.714-258.857-17.714zM877.714 512c0 60.571 0.571 120.571-2.857 181.143-3.429 70.286-19.429 132.571-70.857 184s-113.714 67.429-184 70.857c-60.571 3.429-120.571 2.857-181.143 2.857s-120.571 0.571-181.143-2.857c-70.286-3.429-132.571-19.429-184-70.857s-67.429-113.714-70.857-184c-3.429-60.571-2.857-120.571-2.857-181.143s-0.571-120.571 2.857-181.143c3.429-70.286 19.429-132.571 70.857-184s113.714-67.429 184-70.857c60.571-3.429 120.571-2.857 181.143-2.857s120.571-0.571 181.143 2.857c70.286 3.429 132.571 19.429 184 70.857s67.429 113.714 70.857 184c3.429 60.571 2.857 120.571 2.857 181.143z\"></path>\n            </svg>\n            <svg\n              viewBox=\"0 0 602.2582857142856 1024\"\n              className={styles['icon08']}\n            >\n              <path d=\"M548 6.857v150.857h-89.714c-70.286 0-83.429 33.714-83.429 82.286v108h167.429l-22.286 169.143h-145.143v433.714h-174.857v-433.714h-145.714v-169.143h145.714v-124.571c0-144.571 88.571-223.429 217.714-223.429 61.714 0 114.857 4.571 130.286 6.857z\"></path>\n            </svg>\n          </div>\n        </div>\n      </header>\n    </div>\n  )\n}\n\nexport default RegisterPage",["285","286"],"D:\\FYP demo\\frontend\\src\\views\\sell-goods-page.js",["287","288","289","290","291","292","293"],"import React, { useEffect, useState } from \"react\";\n// import MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {createGoodsAction} from \"../actions/goodsActions\";\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\nimport projectStyles from '../style.module.css'\nimport styles from './sell-goods-page.module.css'\nimport { Helmet } from 'react-helmet'\n\nfunction CreateGoods({ history }) {\n  const [goods_name, setGoods_name] = useState(\"\");\n  const [goods_details, setGoods_details] = useState(\"\");\n  const [goods_category, setGoods_category] = useState(\"\");\n  const [goods_price, setGoods_price] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [goods_pic, setGoods_pic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const goodsCreate = useSelector((state) => state.goodsCreate);\n  const { loading, error, goods } = goodsCreate;\n\n  const resetHandler = () => {\n    setGoods_name(\"\");\n    setGoods_details(\"\");\n    setGoods_category(\"\");\n    setGoods_price(\"\");\n    setGoods_pic(\"\");\n    setCountInStock(\"1\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createGoodsAction(goods_name, goods_details, goods_category, goods_pic,goods_price,countInStock));\n    if (!goods_name || !goods_details || !goods_category || !goods_price) return;\n\n    resetHandler();\n    history.push(\"/\");\n  };\n  function previewFile() {\n    var preview = document.querySelector('img');\n    var file    = document.querySelector('input[type=file]').files[0];\n    var reader  = new FileReader();\n  \n    reader.onloadend = function () {\n      preview.src = reader.result;\n    }\n  \n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      preview.src = \"\";\n    }\n  }\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"goods_pic\");\n      data.append(\"cloud_name\", \"fyp2022\");\n      fetch(\"https://api.cloudinary.com/v1_1/fyp2022/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setGoods_pic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n\n      <div className={styles['container']}>\n      <Helmet>\n        <title>sellGoodsPage - FYP</title>\n        <meta property=\"og:title\" content=\"sellGoodsPage - FYP\" />\n      </Helmet>\n      <input                    \n        id={goods_pic}\n        type=\"file\"\n        label=\"Upload Profile Picture\"\n        custom\n        accept=\"image/*\"\n        // placeholder=\"Upload Profile Picture\"\n        onChange={(e) => postDetails(e.target.files[0])}      \n        className={` ${styles['textinput']} ${projectStyles['input']} `}\n      />\n      <img\n        alt=\"image\"\n        src={goods_pic}\n        className={styles['image']}\n      />\n      <span className={styles['text']}>goods name:</span>\n      <input\n        type=\"text\"\n        value={goods_name}\n        placeholder=\"Enter the goods's name\"\n        onChange={(e) => setGoods_name(e.target.value)}\n        className={` ${styles['textinput1']} ${projectStyles['input']} `}\n      />\n      <span className={styles['text1']}>goods price:</span>\n      <input\n        type=\"text\"\n        value={goods_price}\n        placeholder=\"Enter the goods's price\"\n        onChange={(e) => setGoods_price(e.target.value)}\n        className={` ${styles['textinput2']} ${projectStyles['input']} `}\n      />\n      <span className={styles['text2']}>goods category:</span>\n      <input\n        type=\"content\"\n        value={goods_category}\n        placeholder=\"Enter the Category\"\n        onChange={(e) => setGoods_category(e.target.value)}\n        className={` ${styles['textinput3']} ${projectStyles['input']} `}\n      />\n      <span className={styles['text5']}>goods count:</span>\n      <input\n        type=\"text\"\n        value={countInStock}\n        placeholder=\"Enter the count\"\n        onChange={(e) => setCountInStock(e.target.value)}\n        className={` ${styles['textinput4']} ${projectStyles['input']} `}\n      />\n      <span className={styles['text3']}>goods details:</span>\n      <textarea\n        value={goods_details}\n        placeholder=\"Enter the goods more details\"\n        rows={4}\n        onChange={(e) => setGoods_details(e.target.value)}\n        className={` ${styles['textarea']} ${projectStyles['textarea']} `}\n      ></textarea>\n      {/* {goods_details && (\n              <Card>\n                <Card.Header>Detail Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{goods_details}</ReactMarkdown>\n                </Card.Body>\n                </Card>\n            )} */}\n        \n\n            {loading && <Loading size={50} />}\n      <button className={` ${styles['button']} ${projectStyles['button']} `}\n      type=\"submit\" variant=\"primary\">\n          Add a new goods\n      </button>\n      <button className={` ${styles['button1']} ${projectStyles['button']} `}\n      onClick={resetHandler} variant=\"danger\">\n        Reset Feilds\n      </button>\n      <span className={styles['text4']}>\n        Creating on - {new Date().toLocaleDateString()}\n      </span>\n    </div>\n    </Form>\n  );\n}\n\nexport default CreateGoods;","D:\\FYP demo\\frontend\\src\\components\\navigation-links.js",[],"D:\\FYP demo\\frontend\\src\\store.js",[],"D:\\FYP demo\\frontend\\src\\reducers\\userReducers.js",[],"D:\\FYP demo\\frontend\\src\\constants\\userConstants.js",[],"D:\\FYP demo\\frontend\\src\\actions\\userActions.js",["294","295","296"],"import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_PAY_REQUEST,\r\n    USER_PAY_SUCCESS,\r\n    USER_PAY_FAIL,\r\n    USER_PAY_RESET\r\n  } from \"../constants/userConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const login = (name, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_LOGIN_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"/api/users/login\",\r\n        { name, password },\r\n        config\r\n      );\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const logout = () => async (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_LOGOUT });\r\n  };\r\n  \r\n  export const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: USER_REGISTER_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        \"/api/users\",\r\n        { name, email, password },\r\n        config\r\n      );\r\n  \r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n  \r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n  \r\n      dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n  \r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DETAILS_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/users/${id}`, config)\r\n      dispatch({\r\n        type: USER_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/users`, config)\r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      await axios.delete(`/api/users/${id}`, config)\r\n      dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  export const payMember= (user) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_PAY_REQUEST,\r\n      })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(\r\n        `/api/users/paymember`, user,\r\n        config\r\n      )\r\n      dispatch({\r\n        type: USER_PAY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","D:\\FYP demo\\frontend\\src\\actions\\goodsActions.js",["297"],"import {\r\n    GOODS_UPDATE_REQUEST,\r\n    GOODS_UPDATE_SUCCESS,\r\n    GOODS_UPDATE_FAIL,\r\n    GOODS_CREATE_FAIL,\r\n    GOODS_CREATE_REQUEST,\r\n    GOODS_CREATE_SUCCESS,\r\n    GOODS_DELETE_FAIL,\r\n    GOODS_DELETE_REQUEST,\r\n    GOODS_DELETE_SUCCESS,\r\n    GOODS_LIST_FAIL,\r\n    GOODS_LIST_REQUEST,\r\n    GOODS_LIST_SUCCESS,\r\n    GOODS_ALL_LIST_FAIL,\r\n    GOODS_ALL_LIST_REQUEST,\r\n    GOODS_ALL_LIST_SUCCESS,\r\n    GOODS_DETAILS_REQUEST,\r\n    GOODS_DETAILS_SUCCESS,\r\n    GOODS_DETAILS_FAIL,\r\n    GOODS_TOP_REQUEST,\r\n    GOODS_TOP_SUCCESS,\r\n    GOODS_TOP_FAIL,\r\n    GOODS_BEST_SALES_REQUEST,\r\n    GOODS_BEST_SALES_SUCCESS,\r\n    GOODS_BEST_SALES_FAIL,\r\n    GOODS_SPECIAL_REQUEST,\r\n    GOODS_SPECIAL_SUCCESS,\r\n    GOODS_SPECIAL_FAIL,\r\n    GOODS_CREATE_REVIEW_FAIL,\r\n    GOODS_CREATE_REVIEW_REQUEST,\r\n    GOODS_CREATE_REVIEW_RESET,\r\n    GOODS_CREATE_REVIEW_SUCCESS,\r\n    GOODS_LIST_MY_REQUEST,\r\n    GOODS_LIST_MY_SUCCESS,\r\n    GOODS_LIST_MY_FAIL,\r\n  } from \"../constants/goodsConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const listGoods = (\r\n    keyword = '', pageNumber = ''\r\n    ) => async (dispatch, \r\n      // getState\r\n      ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_LIST_REQUEST,\r\n      });\r\n  \r\n      // const {\r\n      //   userLogin: { userInfo },\r\n      // } = getState();\r\n  \r\n      // const config = {\r\n      //   headers: {\r\n      //     Authorization: `Bearer ${userInfo.token}`,\r\n      //   },\r\n      // };\r\n  \r\n      const { data } = await axios.get(`/api/goods?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n  \r\n      dispatch({\r\n        type: GOODS_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listAllGoods = (\r\n    keyword = '', pageNumber = ''\r\n    ) => async (dispatch,getState\r\n      ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_ALL_LIST_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.get(`/api/goods/all?keyword=${keyword}&pageNumber=${pageNumber}`, config);\r\n  \r\n      dispatch({\r\n        type: GOODS_ALL_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_ALL_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listGoodsDetails = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GOODS_DETAILS_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/goods/${id}`)\r\n  \r\n      dispatch({ type: GOODS_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const createGoodsAction = (goods_name, goods_details, goods_category, goods_pic, goods_price,countInStock\r\n    ) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_CREATE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(\r\n        `/api/goods/create`,\r\n        { goods_name, goods_details, goods_category, goods_price, goods_pic,countInStock },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: GOODS_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const deleteGoodsAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_DELETE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: GOODS_DELETE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: GOODS_DELETE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateGoods = (goods) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: GOODS_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/goods/${goods._id}`,\r\n        goods,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: GOODS_UPDATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n      dispatch({ type: GOODS_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const listBestSalesGoods = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GOODS_BEST_SALES_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/goods/bestsales`)\r\n  \r\n      dispatch({ type: GOODS_BEST_SALES_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_BEST_SALES_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const listSpecialGoods = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: GOODS_SPECIAL_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/goods/special`, config)\r\n  \r\n      dispatch({ type: GOODS_SPECIAL_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_SPECIAL_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  export const listMyGoods = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: GOODS_LIST_MY_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/goods/my`, config)\r\n  \r\n      dispatch({ type: GOODS_LIST_MY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_LIST_MY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  export const listTopGoods = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: GOODS_TOP_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/goods/top`)\r\n  \r\n      dispatch({ type: GOODS_TOP_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GOODS_TOP_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  \r\nexport const createGoodsReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: GOODS_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/goods/${productId}/reviews`, review, config)\r\n\r\n    dispatch({ type: GOODS_CREATE_REVIEW_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GOODS_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","D:\\FYP demo\\frontend\\src\\constants\\goodsConstants.js",[],"D:\\FYP demo\\frontend\\src\\reducers\\goodsReducers.js",[],"D:\\FYP demo\\frontend\\src\\components\\Header.js",["298","299"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {} from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from './SearchBox'\r\nimport MemberSearchBox from './memberSearchBox'\r\n\r\nfunction Header(\r\n  // { setSearch }\r\n  ) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {}, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n    <header>\r\n    <Navbar\r\n      style={{ backgroundColor: '#2E2E2E' }}\r\n      variant='dark'\r\n      fixed='top'\r\n      expand='lg'\r\n      collapseOnSelect\r\n    >\r\n      <Container>\r\n        <LinkContainer to='/'>\r\n          <Navbar.Brand>Model Trading System</Navbar.Brand>\r\n        </LinkContainer>\r\n\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id='basic-navbar-nav'>\r\n          {userInfo && userInfo.isMember ? (\r\n            <Route render={({ history }) => <MemberSearchBox history={history} />} />\r\n          ) : (\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n          )}\r\n          \r\n          <Nav className='ml-auto' sticky=\"true\">\r\n          {/* <LinkContainer to='/sell-goods'>\r\n              <Nav.Link>\r\n                <i className='fas fa-sell-goods'></i>Sell\r\n              </Nav.Link>\r\n            </LinkContainer> */}\r\n            {/* <LinkContainer to='/cart'>\r\n              <Nav.Link>\r\n                <i className='fas fa-shopping-cart'></i>Cart\r\n              </Nav.Link>\r\n            </LinkContainer> */}\r\n            {userInfo && userInfo.isMember && (\r\n              <LinkContainer to='/special'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'>Special</i>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id='username'>\r\n                <LinkContainer to='/profile'>\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/sell-goods'>\r\n                  <NavDropdown.Item>Sell</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/cart'>\r\n                  <NavDropdown.Item>Shopping Cart</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/favourite'>\r\n                  <NavDropdown.Item>Favourites</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/wanted'>\r\n                  <NavDropdown.Item>Wanted</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/history'>\r\n                  <NavDropdown.Item>History</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'>Login</i>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n            {userInfo && userInfo.isAdmin && (\r\n              <NavDropdown title='Admin' id='adminmenu'>\r\n                <LinkContainer to='/admin/userlist'>\r\n                  <NavDropdown.Item>Users</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to='/admin/productlist'>\r\n                  <NavDropdown.Item>Goods</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n                <LinkContainer to='/admin/orderlist'>\r\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                </LinkContainer>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  </header>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Header;","D:\\FYP demo\\frontend\\src\\components\\Goods.js",["300","301"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n// import Rating from './Rating'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card } from 'react-bootstrap'\n// import User from '../../../backend/models/userModel.js'\nimport {\n  addToHistoryAction\n} from '../actions/historyAction.js'\n\n\n\nconst Goods = ({ goods }) => {\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const addHistory = useSelector((state) => state.addHistory);\n  const { success: successaddhistory,\n    error: erroraddhistory } = addHistory;\n\n  const addToHistoryHandler = async (id, user) => {\n    dispatch(addToHistoryAction(id,user))\n  }\n\n  return (\n    userInfo ? (\n    <Card\n      className='my-3 rounded'\n      style={{\n        backgroundColor: '#F1F1F1',\n        // backgroundColor: 'red',\n        marginLeft: '0.2rem',\n        paddingBottom: '0px',\n        boxShadow: '3px 3px 10px 3px #888888',\n        borderRadius: '10px',\n      }}\n    >\n      <Link to={`/goods/${goods._id}`} \n      onClick={() => addToHistoryHandler(goods._id,userInfo._id)}\n      >\n        <Card.Img\n          src={goods.goods_pic}\n          variant='top'\n          style={{\n            height: '250px',\n          }}\n        />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/goods/${goods._id}`}\n        onClick={() => addToHistoryHandler(goods._id,userInfo._id)}\n        >\n          <Card.Title as='div'>\n            <strong style={{ color: 'black' }}>{goods.goods_name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as='h4'>Sales: {goods.sales}</Card.Text>\n        <Card.Text as='h4'>owner: {goods.owner && goods.owner.name}</Card.Text>\n        <Card.Text as='h3'>${goods.goods_price}</Card.Text>\n      </Card.Body>\n    </Card>):(\n      <Card\n          className='my-3 rounded'\n            style={{\n              backgroundColor: '#F1F1F1',\n              // backgroundColor: 'red',\n              marginLeft: '0.2rem',\n              paddingBottom: '0px',\n              boxShadow: '3px 3px 10px 3px #888888',\n              borderRadius: '10px',\n            }}\n          >\n            <Link to={`/goods/${goods._id}`} \n            \n            >\n              <Card.Img\n                src={goods.goods_pic}\n                variant='top'\n                style={{\n                  height: '250px',\n                }}\n              />\n            </Link>\n      \n            <Card.Body>\n              <Link to={`/goods/${goods._id}`}\n              \n              >\n                <Card.Title as='div'>\n                  <strong style={{ color: 'black' }}>{goods.goods_name}</strong>\n                </Card.Title>\n              </Link>\n              <Card.Text as='h4'>Sales: {goods.sales}</Card.Text>\n              <Card.Text as='h4'>owner: {goods.owner && goods.owner.name}</Card.Text>\n              <Card.Text as='h3'>${goods.goods_price}</Card.Text>\n            </Card.Body>\n            </Card>\n    )\n    \n    \n  )\n}\n\nexport default Goods","D:\\FYP demo\\frontend\\src\\components\\Paginate.js",[],"D:\\FYP demo\\frontend\\src\\components\\Loading.js",[],"D:\\FYP demo\\frontend\\src\\components\\ErrorMessage.js",[],"D:\\FYP demo\\frontend\\src\\components\\SearchBox.js",[],"D:\\FYP demo\\frontend\\src\\components\\Meta.js",[],"D:\\FYP demo\\frontend\\src\\components\\ProductCarousel.js",["302"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loading from \"./Loading\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { listTopGoods } from '../actions/goodsActions'\n\n\nconst ProductCarousel = ({}) => {\n  const dispatch = useDispatch()\n\n  const goodsTopRated = useSelector((state) => state.goodsTopRated)\n  const { loading, error, goods } = goodsTopRated\n\n  useEffect(() => {\n    dispatch(listTopGoods())\n  }, [dispatch])\n  return loading ? (\n      <Loading />\n    ) : error ? (\n      <ErrorMessage variant='danger'>{error}</ErrorMessage>\n  ) : (\n    <Carousel pause='hover' className='bg-dark mt-3 '>\n      {goods.map((goods) => (\n        <Carousel.Item key={goods._id}>\n          <Link to={`/goods/${goods._id}`}>\n            <Image src={goods.goods_pic} alt={goods.goods_name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {goods.goods_name} (${goods.goods_price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","D:\\FYP demo\\frontend\\src\\reducers\\cartReducer.js",[],"D:\\FYP demo\\frontend\\src\\constants\\cartConstants.js",[],"D:\\FYP demo\\frontend\\src\\views\\CartScreen.js",[],"D:\\FYP demo\\frontend\\src\\actions\\cartAction.js",[],"D:\\FYP demo\\frontend\\src\\views\\ProductScreen.js",["303","304"],"D:\\FYP demo\\frontend\\src\\views\\UserListScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\UserEditScreen.js",[],"D:\\FYP demo\\frontend\\src\\components\\FormContainer.js",[],"D:\\FYP demo\\frontend\\src\\views\\ProductListScreen.js",["305"],"/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button, Table, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Paginate from '../components/Paginate'\nimport {\n  listGoods,\n  deleteGoodsAction,\n} from '../actions/goodsActions'\nimport { GOODS_CREATE_RESET } from '../constants/goodsConstants'\n// import { app } from '../base'\n\nconst productListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n\n  const goodsList = useSelector((state) => state.goodsList)\n  const { loading, error, goods, page, pages } = goodsList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const goodDelete = useSelector((state) => state.goodsDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = goodDelete\n\n  const listDetails = useSelector((state) => state.goodsDetails)\n  const { good } = listDetails\n\n  useEffect(() => {\n    dispatch({ type: GOODS_CREATE_RESET })\n    if (!userInfo.isAdmin) {\n      history.push('/login')\n    }\n      dispatch(listGoods('', pageNumber))\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    // successCreate,\n    // createdgood,\n    pageNumber,\n  ])\n\n  const deleteHandler = async (id) => {\n    if (window.confirm('Are you sure ?')) {\n      dispatch(deleteGoodsAction(id))\n    }\n  }\n\n  return (\n    <>\n      <Row className='align-items-center mt-5'>\n        <Col>\n          <h1>Goods</h1>\n        </Col>\n        {/* <Col className='text-right'>\n          <Button className='my-3' onClick={creategoodHandler}>\n            <i className='fas fa-plus'></i> Create good\n          </Button>\n        </Col> */}\n      </Row>\n      {loadingDelete && <Loading />}\n      {errorDelete && <ErrorMessage variant='danger'>{errorDelete}</ErrorMessage>}\n      {/* {loadingCreate && <Loading />}\n      {errorCreate && <ErrorMessage variant='danger'>{errorCreate}</ErrorMessage>} */}\n\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <ErrorMessage variant='danger'>{error}</ErrorMessage>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='tabel-sm'>\n            <thead>\n              <tr>\n                <th>PHOTO</th>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Category</th>\n                {/* <th>BRAND</th> */}\n                <th>Count In Stock</th>\n                <th>Owner</th>\n                <th>Create Time</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {goods.map((good) => (\n                <tr key={good._id}>\n                  <td>\n                    {' '}\n                    <img\n                      width='50'\n                      height='50'\n                      alt={good.goods_name}\n                      src={good.goods_pic}\n                    />{' '}\n                  </td>\n                  <td>{good.goods_name}</td>\n                  <td>${good.goods_price}</td>\n                  <td>{good.goods_category}</td>\n                  {/* <td>{good.brand}</td> */}\n                  <td>{good.countInStock}</td>\n                  <td>{good.owner && good.owner.name}</td>\n                  <td>{good.createdAt}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${good._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'>Edit</i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(good._id)}\n                    >\n                      <i className='fas fa-trash'>Delete</i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default productListScreen\n","D:\\FYP demo\\frontend\\src\\views\\ProductEditScreen.js",["306"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FormContainer from '../components/FormContainer'\nimport { listGoodsDetails, updateGoods } from '../actions/goodsActions'\nimport { GOODS_UPDATE_RESET } from '../constants/goodsConstants'\n// import { app } from '../base'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [goods_name, setName] = useState('')\n  const [goods_price, setPrice] = useState(0)\n  // const [image, setImage] = useState('')\n  // const [brand, setBrand] = useState('')\n  const [goods_category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [goods_details, setDescription] = useState('')\n  const [picMessage, setPicMessage] = useState(null);\n  const [goods_pic, setGoods_pic] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n\n  const dispatch = useDispatch()\n\n  const goodsDetails = useSelector((state) => state.goodsDetails)\n  const { loading, error, good } = goodsDetails\n\n  const goodsUpdate = useSelector((state) => state.goodsUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = goodsUpdate\n\n  // const onFileChange = async (e) => {\n  //   const file = e.target.files[0]\n  //   const storageRef = app.storage().ref()\n  //   const fileRef = storageRef.child(file.name)\n  //   await fileRef.put(file)\n  //   setImageURL(await fileRef.getDownloadURL())\n  // }\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"goods_pic\");\n      data.append(\"cloud_name\", \"fyp2022\");\n      fetch(\"https://api.cloudinary.com/v1_1/fyp2022/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setGoods_pic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: GOODS_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!good.goods_name || good._id !== productId) {\n        dispatch(listGoodsDetails(productId))\n      } else {\n        setName(good.goods_name)\n        setPrice(good.goods_price)\n        setGoods_pic(good.goods_pic)\n        // setBrand(product.brand)\n        setCategory(good.goods_category)\n        setCountInStock(good.countInStock)\n        setDescription(good.goods_details)\n      }\n    }\n  }, [dispatch, history, good, productId, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateGoods({\n        _id: productId,\n        goods_name,\n        goods_price,\n        goods_pic,\n        // brand,\n        goods_category,\n        goods_details,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loading />}\n        {errorUpdate && <ErrorMessage variant='danger'>{errorUpdate}</ErrorMessage>}\n\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <ErrorMessage variant='danger'>{error}</ErrorMessage>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={goods_name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={goods_price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              {goods_pic === 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg' ? (\n                <input \n                type='file' \n                accept=\"image/*\"\n                onChange={(e) => postDetails(e.target.files[0])} />\n              ) : (\n                <p>Image Selected !!!!</p>\n              )}\n              {goods_pic === 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg' ? (\n                <p>no image</p>\n              ) : (\n                <img height='100' width='100' src={goods_pic} alt={goods_name} />\n              )}\n            </Form.Group>\n\n            {/* <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group> */}\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={goods_category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Details</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Details '\n                value={goods_details}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","D:\\FYP demo\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\FYP demo\\frontend\\src\\constants\\orderConstants.js",[],"D:\\FYP demo\\frontend\\src\\views\\ShippingScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\OrderListScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\PaymentScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\PlaceOrderScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\orderScreen.js",["307","308"],"import React, { useEffect } from 'react'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { Link } from 'react-router-dom'\nimport { getOrderDetails, deliverOrder,payOrder } from '../actions/orderAction'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay, error:errorPay } = orderPay\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    // Calculate prices\n    const addDcimal = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    order.itemsPrice = addDcimal(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    if(errorPay){\n      history.go(0)\n      alert('Payment Failed! Check your wallet!')\n    }\n    dispatch(getOrderDetails(orderId))\n  }, [dispatch, orderId, errorPay, history, userInfo])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n    history.go(0)\n  }\n  const payHandler = () => {\n    dispatch(payOrder(order))\n    history.go(0)\n  }\n  return loading ? (\n    <Loading  />\n  ) : error ? (\n    <ErrorMessage variant='danger'>{error}</ErrorMessage>\n  ) : (\n    <>\n      <h1 className='mt-5'>Order{order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {' '}\n                <strong>Name: </strong> {order.user.name}{' '}\n              </p>\n              <p>\n                {' '}\n                <strong>Email: </strong>{' '}\n                <a href={`mailto: ${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.address}, {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <ErrorMessage variant='success'>\n                  Delivered on {order.deliveredAt}\n                </ErrorMessage>\n              ) : (\n                <ErrorMessage variant='danger'>Not Delivered</ErrorMessage>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <ErrorMessage variant='success'>Paid on {order.paidAt}</ErrorMessage>\n              ) : (\n                <ErrorMessage variant='danger'>Not Paid</ErrorMessage>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <ErrorMessage>Order Is Empty</ErrorMessage>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  {<Col>${order.taxPrice}</Col>}\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n              {loadingPay && <Loading />}\n                {userInfo && !userInfo.isAdmin && !order.isPaid && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={payHandler}\n                    >\n                      Pay Order\n                    </Button>\n                                        \n                  </ListGroup.Item>\n                )}\n                {userInfo && userInfo.isAdmin && !order.isPaid && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={payHandler}\n                    >\n                      Mark As Paid\n                    </Button>\n                                        \n                  </ListGroup.Item>\n                )}\n                {loadingDeliver && <Loading />}\n                {order.isPaid && !order.isDelivered && (\n                  \n                  <ListGroup.Item>\n                <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                    </ListGroup.Item>\n                    )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","D:\\FYP demo\\frontend\\src\\actions\\orderAction.js",[],"D:\\FYP demo\\frontend\\src\\components\\CheckOutSteps.js",[],"D:\\FYP demo\\frontend\\src\\components\\Loader.js",[],"D:\\FYP demo\\frontend\\src\\components\\Rating.js",[],"D:\\FYP demo\\frontend\\src\\components\\memberSearchBox.js",[],"D:\\FYP demo\\frontend\\src\\views\\specialScreen.js",["309","310","311","312","313","314","315","316","317"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport Goods from \"../components/Goods\"\r\nimport {listSpecialGoods,listAllGoods} from \"../actions/goodsActions\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loading from \"../components/Loading\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nconst SpecialScreen = ({ \r\n  match \r\n}) => {\r\n\r\n  // const history = useHistory();\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const goodsListAll = useSelector((state) => state.goodsListAll)\r\n  const { loading, error, goods,\r\n     page, pages\r\n    } = goodsListAll;\r\n\r\n    useEffect(() => {\r\n      dispatch(listAllGoods(\r\n        keyword, pageNumber\r\n        ))\r\n    }, [dispatch, \r\n      keyword, pageNumber\r\n    ]);\r\n\r\n  const goodsSpecial = useSelector((state) => state.goodsSpecial)\r\n  const {sgoods } = goodsSpecial\r\n  \r\n    useEffect(() => {\r\n      dispatch(listSpecialGoods())\r\n    }, [dispatch])\r\n    \r\n  // const logoutHandler = () => {\r\n  //   dispatch(logout());\r\n  // };\r\n\r\n\r\n  // console.log(goods)\r\n  return (\r\n    <>\r\n    <Meta />\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n            {\r\n            !keyword && (\r\n              userInfo && userInfo.isMember  && (\r\n              loading ? (\r\n                <Loading />\r\n              ) : error ? (\r\n                <ErrorMessage variant='danger'>{error}</ErrorMessage>\r\n              ) : (\r\n                <>\r\n                <h1>Special models</h1>\r\n                <Row>\r\n                    {sgoods.map((goods) => (\r\n                      <Col key={goods._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Goods goods={goods} />\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  </>\r\n                  // )}\r\n      ))\r\n      )\r\n      }\r\n      {keyword && (\r\n        //  {\r\n        loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <ErrorMessage variant='danger'>{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n        <h1>Searched models</h1>\r\n        <Row>\r\n            {goods.map((goods) => (\r\n              <Col key={goods._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Goods goods={goods} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n          </>\r\n        )\r\n            // }\r\n     )} \r\n        \r\n  </>\r\n  )\r\n}\r\n\r\nexport default SpecialScreen","D:\\FYP demo\\frontend\\src\\views\\ProfileScreen.js",["318"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { updateProfile} from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderAction'\nimport { listMyGoods } from '../actions/goodsActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState(\"\");\n\n  // const [password, setPassword] = useState('')\n  // const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  // const userDetails = useSelector((state) => state.userDetails)\n  // const { user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { loading, error, success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  const goodsMy = useSelector((state) => state.goodsMy)\n  const { loading: loadingGoods, error: errorGoods, mgoods } = goodsMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      // eslint-disable-next-line no-restricted-globals\n      history.push('/login')\n    } else {\n      // if (!user.name) {\n      //   dispatch(getUserDetails('profile'))\n      //   dispatch(listMyOrders())\n      // } else {\n        setName(userInfo.name)\n        setEmail(userInfo.email)\n        setPhone(userInfo.phone)\n        dispatch(listMyOrders())\n        dispatch(listMyGoods())\n      // }\n    }\n  }, [history, userInfo, dispatch])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // if (password !== confirmPassword) {\n    //   setMessage('Passwords do not match')\n    // } else {\n      dispatch(updateProfile({ \n        // id: user._id,\n        name, email, phone\n        // password\n       }\n       ))\n    // }\n  }\n\n  return (\n    <Row className='my-5'>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <ErrorMessage variant='danger'>{message}</ErrorMessage>}\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\n        {success && <ErrorMessage variant='success'>Profile Updated!</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='phone'>\n            <Form.Label>Phone</Form.Label>\n            <Form.Control\n              type='phone'\n              placeholder='Enter phone'\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n          {/* <Form.Group controlId='wallet'> */}\n            \n          {/* </Form.Group> */}\n        </Form>\n        <h2>wallet: $ {userInfo.wallet}</h2>\n      </Col>\n      <Col md={9}>\n        <h2>My Order</h2>\n        {loadingOrders ? (\n          <Loading />\n        ) : errorOrders ? (\n          <ErrorMessage variant='danger'>{errorOrders}</ErrorMessage>\n        ) : (\n          <Table striped bordered hover responsive className='tabel-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {' '}\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}{' '}\n                  </td>\n\n                  <td>\n                    {' '}\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}{' '}\n                  </td>\n\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n        </Col>\n        <Col md={10}>\n        <h2>My Models</h2>\n          {loadingGoods ? (\n          <Loading />\n        ) : errorGoods ? (\n          <ErrorMessage variant='danger'>{errorGoods}</ErrorMessage>\n        ) : (\n          <Table striped bordered hover responsive className='tabel-sm'>\n            <thead>\n              <tr>\n                <th>Photo</th>\n                <th>Name</th>\n                <th>Create Date</th>\n                <th>Latest Transaction</th>\n                <th>Price</th>\n                <th>Count In Stock</th>\n                <th>Sales</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {mgoods.map((goods) => (\n                <tr key={goods._id}>\n                  <td>\n                    {' '}\n                    <img\n                      width='50'\n                      height='50'\n                      alt={goods.goods_name}\n                      src={goods.goods_pic}\n                    />{' '}\n                  </td>\n                  <td>{goods.goods_name}</td>\n                  <td>{goods.createdAt.substring(0, 10)}</td>\n                  {/* if ({goods.createdAt} == {goods.updatedAt}) {                    \n                  <td>{goods.updatedAt.substring(0, 10)}</td>\n                  }{  <td></td>} */}\n                  <td>{goods.updatedAt.substring(0, 10)}</td>\n                  <td>${goods.goods_price}</td>\n                  <td>{goods.countInStock}</td>\n                  <td>{goods.sales}</td>\n                  <td>\n                    <LinkContainer to={`/goods/${goods._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","D:\\FYP demo\\frontend\\src\\components\\Footer.js",[],"D:\\FYP demo\\frontend\\src\\actions\\favouriteActions.js",["319"],"import {\r\n    FAVOURITE_ADD_REQUEST,\r\n    FAVOURITE_ADD_SUCCESS,\r\n    FAVOURITE_ADD_FAIL,\r\n    FAVOURITE_ADD_RESET,\r\n    FAVOURITE_REMOVE_REQUEST,\r\n    FAVOURITE_REMOVE_SUCCESS,\r\n    FAVOURITE_REMOVE_FAIL,\r\n    FAVOURITE_REQUEST,\r\n    FAVOURITE_SUCCESS,\r\n    FAVOURITE_FAIL,\r\n  } from \"../constants/favouriteConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToFavouriteAction = (id ,user ) => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_ADD_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/favourite/goods/${id}`, user, config);\r\n  \r\n      dispatch({\r\n        type: FAVOURITE_ADD_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_ADD_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteFavouriteAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/favourite/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listMyFavourite = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: FAVOURITE_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/favourite/myfavourite`, config)\r\n  \r\n      dispatch({ type: FAVOURITE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FAVOURITE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","D:\\FYP demo\\frontend\\src\\constants\\favouriteConstants.js",[],"D:\\FYP demo\\frontend\\src\\reducers\\favouriteReducers.js",[],"D:\\FYP demo\\frontend\\src\\reducers\\wantedReducers.js",[],"D:\\FYP demo\\frontend\\src\\reducers\\historyReducers.js",[],"D:\\FYP demo\\frontend\\src\\constants\\wantedConstants.js",[],"D:\\FYP demo\\frontend\\src\\constants\\historyConstants.js",[],"D:\\FYP demo\\frontend\\src\\actions\\wantedActions.js",[],"D:\\FYP demo\\frontend\\src\\views\\favourites.js",[],"D:\\FYP demo\\frontend\\src\\views\\wanted.js",[],"D:\\FYP demo\\frontend\\src\\views\\history.js",[],"D:\\FYP demo\\frontend\\src\\views\\paymember.js",["320","321"],"import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckOutSteps from '../components/CheckOutSteps'\r\n// import { savePaymentMethod } from '../actions/cartAction'\r\nimport { payMember } from '../actions/userActions'\r\n\r\n\r\nconst PaymemberScreen = ({ history }) => {\r\n\r\n//   const [paymentMethod, setPaymentMethod] = useState('Credit')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const payHandler = () => {\r\n    dispatch(payMember())\r\n    history.push('/')\r\n  }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckOutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <h3>Join us now! Get more for just $10</h3>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Credit'\r\n              id='Credit'\r\n              name='paymentMethod'\r\n              value='Credit'\r\n              checked\r\n            //   onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n            //   onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={payHandler}\r\n                    >\r\n          Pay Membership Fee\r\n        </Button>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymemberScreen","D:\\FYP demo\\frontend\\src\\views\\loginScreen.js",[],["322","323"],"D:\\FYP demo\\frontend\\src\\actions\\historyAction.js",[],"D:\\FYP demo\\frontend\\src\\views\\RegisterScreen.js",[],"D:\\FYP demo\\frontend\\src\\views\\LoginScreen.js",[],{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","severity":1,"message":"329","line":1,"column":17,"nodeType":"330","messageId":"331","endLine":1,"endColumn":25},{"ruleId":"328","severity":1,"message":"332","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":16},{"ruleId":"328","severity":1,"message":"333","line":5,"column":38,"nodeType":"330","messageId":"331","endLine":5,"endColumn":54},{"ruleId":"328","severity":1,"message":"334","line":6,"column":8,"nodeType":"330","messageId":"331","endLine":6,"endColumn":23},{"ruleId":"328","severity":1,"message":"335","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":21},{"ruleId":"328","severity":1,"message":"336","line":9,"column":10,"nodeType":"330","messageId":"331","endLine":9,"endColumn":20},{"ruleId":"328","severity":1,"message":"337","line":11,"column":10,"nodeType":"330","messageId":"331","endLine":11,"endColumn":16},{"ruleId":"328","severity":1,"message":"338","line":20,"column":3,"nodeType":"330","messageId":"331","endLine":20,"endColumn":12},{"ruleId":"328","severity":1,"message":"339","line":21,"column":3,"nodeType":"330","messageId":"331","endLine":21,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":22,"column":3,"nodeType":"330","messageId":"331","endLine":22,"endColumn":14},{"ruleId":"328","severity":1,"message":"341","line":23,"column":3,"nodeType":"330","messageId":"331","endLine":23,"endColumn":6},{"ruleId":"328","severity":1,"message":"342","line":24,"column":3,"nodeType":"330","messageId":"331","endLine":24,"endColumn":9},{"ruleId":"328","severity":1,"message":"343","line":25,"column":3,"nodeType":"330","messageId":"331","endLine":25,"endColumn":14},{"ruleId":"328","severity":1,"message":"344","line":39,"column":11,"nodeType":"330","messageId":"331","endLine":39,"endColumn":19},{"ruleId":"328","severity":1,"message":"345","line":7,"column":16,"nodeType":"330","messageId":"331","endLine":7,"endColumn":22},{"ruleId":"328","severity":1,"message":"346","line":7,"column":24,"nodeType":"330","messageId":"331","endLine":7,"endColumn":27},{"ruleId":"328","severity":1,"message":"347","line":7,"column":29,"nodeType":"330","messageId":"331","endLine":7,"endColumn":32},{"ruleId":"348","severity":1,"message":"349","line":143,"column":15,"nodeType":"350","endLine":147,"endColumn":17},{"ruleId":"324","replacedBy":"351"},{"ruleId":"326","replacedBy":"352"},{"ruleId":"328","severity":1,"message":"345","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":16},{"ruleId":"328","severity":1,"message":"353","line":3,"column":18,"nodeType":"330","messageId":"331","endLine":3,"endColumn":22},{"ruleId":"328","severity":1,"message":"354","line":8,"column":8,"nodeType":"330","messageId":"331","endLine":8,"endColumn":21},{"ruleId":"328","severity":1,"message":"355","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":20},{"ruleId":"328","severity":1,"message":"356","line":27,"column":27,"nodeType":"330","messageId":"331","endLine":27,"endColumn":32},{"ruleId":"328","severity":1,"message":"357","line":46,"column":12,"nodeType":"330","messageId":"331","endLine":46,"endColumn":23},{"ruleId":"348","severity":1,"message":"349","line":111,"column":7,"nodeType":"350","endLine":115,"endColumn":9},{"ruleId":"328","severity":1,"message":"358","line":15,"column":5,"nodeType":"330","messageId":"331","endLine":15,"endColumn":23},{"ruleId":"328","severity":1,"message":"359","line":19,"column":5,"nodeType":"330","messageId":"331","endLine":19,"endColumn":20},{"ruleId":"328","severity":1,"message":"360","line":29,"column":5,"nodeType":"330","messageId":"331","endLine":29,"endColumn":19},{"ruleId":"328","severity":1,"message":"361","line":31,"column":5,"nodeType":"330","messageId":"331","endLine":31,"endColumn":30},{"ruleId":"328","severity":1,"message":"339","line":4,"column":3,"nodeType":"330","messageId":"331","endLine":4,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":5,"column":3,"nodeType":"330","messageId":"331","endLine":5,"endColumn":14},{"ruleId":"328","severity":1,"message":"362","line":21,"column":20,"nodeType":"330","messageId":"331","endLine":21,"endColumn":37},{"ruleId":"328","severity":1,"message":"363","line":22,"column":12,"nodeType":"330","messageId":"331","endLine":22,"endColumn":27},{"ruleId":"364","severity":1,"message":"365","line":10,"column":26,"nodeType":"366","messageId":"367","endLine":10,"endColumn":28},{"ruleId":"328","severity":1,"message":"368","line":45,"column":12,"nodeType":"330","messageId":"331","endLine":45,"endColumn":20},{"ruleId":"328","severity":1,"message":"369","line":49,"column":14,"nodeType":"330","messageId":"331","endLine":49,"endColumn":28},{"ruleId":"328","severity":1,"message":"370","line":34,"column":11,"nodeType":"330","messageId":"331","endLine":34,"endColumn":15},{"ruleId":"328","severity":1,"message":"355","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":20},{"ruleId":"328","severity":1,"message":"371","line":17,"column":45,"nodeType":"330","messageId":"331","endLine":17,"endColumn":59},{"ruleId":"328","severity":1,"message":"372","line":20,"column":41,"nodeType":"330","messageId":"331","endLine":20,"endColumn":51},{"ruleId":"328","severity":1,"message":"329","line":1,"column":17,"nodeType":"330","messageId":"331","endLine":1,"endColumn":25},{"ruleId":"328","severity":1,"message":"332","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":16},{"ruleId":"328","severity":1,"message":"336","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":20},{"ruleId":"328","severity":1,"message":"338","line":15,"column":3,"nodeType":"330","messageId":"331","endLine":15,"endColumn":12},{"ruleId":"328","severity":1,"message":"339","line":16,"column":3,"nodeType":"330","messageId":"331","endLine":16,"endColumn":7},{"ruleId":"328","severity":1,"message":"340","line":17,"column":3,"nodeType":"330","messageId":"331","endLine":17,"endColumn":14},{"ruleId":"328","severity":1,"message":"341","line":18,"column":3,"nodeType":"330","messageId":"331","endLine":18,"endColumn":6},{"ruleId":"328","severity":1,"message":"342","line":19,"column":3,"nodeType":"330","messageId":"331","endLine":19,"endColumn":9},{"ruleId":"328","severity":1,"message":"343","line":20,"column":3,"nodeType":"330","messageId":"331","endLine":20,"endColumn":14},{"ruleId":"328","severity":1,"message":"373","line":20,"column":19,"nodeType":"330","messageId":"331","endLine":20,"endColumn":29},{"ruleId":"328","severity":1,"message":"374","line":5,"column":5,"nodeType":"330","messageId":"331","endLine":5,"endColumn":24},{"ruleId":"328","severity":1,"message":"329","line":1,"column":17,"nodeType":"330","messageId":"331","endLine":1,"endColumn":25},{"ruleId":"328","severity":1,"message":"375","line":3,"column":23,"nodeType":"330","messageId":"331","endLine":3,"endColumn":34},{"ruleId":"324","replacedBy":"376"},{"ruleId":"326","replacedBy":"377"},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Helmet' is defined but never used.","'listSpecialGoods' is defined but never used.","'NavigationLinks' is defined but never used.","'projectStyles' is defined but never used.","'useHistory' is defined but never used.","'logout' is defined but never used.","'Container' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'userInfo' is assigned a value but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["378"],["379"],"'Card' is defined but never used.","'ReactMarkdown' is defined but never used.","'picMessage' is assigned a value but never used.","'goods' is assigned a value but never used.","'previewFile' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","'USER_LIST_RESET' is defined but never used.","'USER_PAY_RESET' is defined but never used.","'GOODS_CREATE_REVIEW_RESET' is defined but never used.","'successaddhistory' is assigned a value but never used.","'erroraddhistory' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'erroradd' is assigned a value but never used.","'erroraddwanted' is assigned a value but never used.","'good' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'successPay' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'FAVOURITE_ADD_RESET' is defined but never used.","'useSelector' is defined but never used.",["378"],["379"],"no-global-assign","no-unsafe-negation"]