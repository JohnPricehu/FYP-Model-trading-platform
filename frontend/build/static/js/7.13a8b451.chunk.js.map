{"version":3,"sources":["actions/favouriteActions.js","actions/wantedActions.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Rating.js","views/ProductScreen.js"],"names":["addToFavouriteAction","id","user","dispatch","getState","a","type","FAVOURITE_ADD_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","post","data","FAVOURITE_ADD_SUCCESS","payload","message","response","FAVOURITE_ADD_FAIL","deleteFavouriteAction","FAVOURITE_REMOVE_REQUEST","delete","FAVOURITE_REMOVE_SUCCESS","FAVOURITE_REMOVE_FAIL","listMyFavourite","FAVOURITE_REQUEST","get","FAVOURITE_SUCCESS","FAVOURITE_FAIL","addToWantedAction","WANTED_ADD_REQUEST","WANTED_ADD_SUCCESS","WANTED_ADD_FAIL","deleteWantedAction","WANTED_REMOVE_REQUEST","WANTED_REMOVE_SUCCESS","WANTED_REMOVE_FAIL","listMyWanted","WANTED_REQUEST","WANTED_SUCCESS","WANTED_FAIL","defaultProps","variant","undefined","active","disabled","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","className","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","Rating","value","text","color","style","ProductScreen","history","match","useState","qty","setQty","rating","setRating","comment","setComment","successfmessage","setSuccessfMessage","failfmessage","setFailfMessage","successwmessage","setSuccesswMessage","failwmessage","setFailwMessage","useDispatch","useSelector","state","listDetails","goodsDetails","loading","good","error","addFavourite","successadd","success","erroradd","addWanted","successaddwanted","erroraddwanted","productReviewCreate","goodsReviewCreate","successProductReview","errorProductReview","useEffect","alert","GOODS_CREATE_REVIEW_RESET","listGoodsDetails","params","addToCartHandler","push","addToFavouriteHandler","addToWantedHandler","backgroundColor","border","borderRadius","marginTop","marginBottom","to","Loading","ErrorMessage","Meta","title","goods_name","Row","Col","md","Image","src","goods_pic","alt","fluid","numReviews","goods_price","goods_details","Card","countInStock","FormControl","onChange","e","target","Array","keys","map","x","goods_category","isMember","Button","_id","reviews","length","review","name","createdAt","substring","Form","onSubmit","createGoodsReview","Group","controlId","Label","Control","row"],"mappings":"iQAcaA,EAAuB,SAACC,EAAIC,GAAL,8CAAe,WAAOC,EAASC,GAAhB,yBAAAC,EAAA,sEAE7CF,EAAS,CACPG,KAAMC,MAHqC,EAQzCH,IADWI,EAP8B,EAO3CC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZO,SAgBtBC,IAAMC,KAAN,+BAAmCd,GAAMC,EAAMQ,GAhBzB,gBAgBrCM,EAhBqC,EAgBrCA,KAERb,EAAS,CACPG,KAAMW,IACNC,QAASF,IApBkC,kDAuBvCG,EACJ,KAAMC,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,QACZhB,EAAS,CACPG,KAAMe,IACNH,QAASC,IA7BkC,0DAAf,yDAkCrBG,EAAwB,SAACrB,GAAD,8CAAQ,WAAOE,EAAUC,GAAjB,yBAAAC,EAAA,sEAEzCF,EAAS,CACPG,KAAMiB,MAHiC,EAQrCnB,IADWI,EAP0B,EAOvCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZG,SAgBlBC,IAAMU,OAAN,+BAAqCvB,GAAMS,GAhBzB,gBAgBjCM,EAhBiC,EAgBjCA,KAERb,EAAS,CACPG,KAAMmB,IACNP,QAASF,IApB8B,kDAuBnCG,EACJ,KAAMC,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,QACZhB,EAAS,CACPG,KAAMoB,IACNR,QAASC,IA7B8B,0DAAR,yDAkCxBQ,EAAkB,yDAAM,WAAOxB,EAAUC,GAAjB,uBAAAC,EAAA,sEAEjCF,EAAS,CAAEG,KAAMsB,MAFgB,EAK7BxB,IADWI,EAJkB,EAI/BC,UAAaD,SAETE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SARL,SAWVC,IAAMe,IAAN,6BAAwCnB,GAX9B,gBAWzBM,EAXyB,EAWzBA,KAERb,EAAS,CAAEG,KAAMwB,IAAmBZ,QAASF,IAbZ,kDAejCb,EAAS,CACPG,KAAMyB,IACNb,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,UApBmB,0DAAN,0D,4LCrEpBa,EAAoB,SAAC/B,EAAIC,GAAL,8CAAe,WAAOC,EAASC,GAAhB,yBAAAC,EAAA,sEAE1CF,EAAS,CACPG,KAAM2B,MAHkC,EAQtC7B,IADWI,EAP2B,EAOxCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZI,SAgBnBC,IAAMC,KAAN,4BAAgCd,GAAMC,EAAMQ,GAhBzB,gBAgBlCM,EAhBkC,EAgBlCA,KAERb,EAAS,CACPG,KAAM4B,IACNhB,QAASF,IApB+B,kDAuBpCG,EACJ,KAAMC,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,QACZhB,EAAS,CACPG,KAAM6B,IACNjB,QAASC,IA7B+B,0DAAf,yDAkClBiB,EAAqB,SAACnC,GAAD,8CAAQ,WAAOE,EAAUC,GAAjB,yBAAAC,EAAA,sEAEtCF,EAAS,CACPG,KAAM+B,MAH8B,EAQlCjC,IADWI,EAPuB,EAOpCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZA,SAgBfC,IAAMU,OAAN,4BAAkCvB,GAAMS,GAhBzB,gBAgB9BM,EAhB8B,EAgB9BA,KAERb,EAAS,CACPG,KAAMgC,IACNpB,QAASF,IApB2B,kDAuBhCG,EACJ,KAAMC,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,QACZhB,EAAS,CACPG,KAAMiC,IACNrB,QAASC,IA7B2B,0DAAR,yDAkCrBqB,EAAc,yDAAM,WAAOrC,EAAUC,GAAjB,uBAAAC,EAAA,sEAE7BF,EAAS,CAAEG,KAAMmC,MAFY,EAKzBrC,IADWI,EAJc,EAI3BC,UAAaD,SAETE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SART,SAWNC,IAAMe,IAAN,uBAAkCnB,GAX5B,gBAWrBM,EAXqB,EAWrBA,KAERb,EAAS,CAAEG,KAAMoC,IAAgBxB,QAASF,IAbb,kDAe7Bb,EAAS,CACPG,KAAMqC,IACNzB,QACE,KAAME,UAAY,KAAMA,SAASJ,KAAKG,QAClC,KAAMC,SAASJ,KAAKG,QACpB,KAAMA,UApBe,0DAAN,0D,kIC1EzByB,EAAe,CACjBC,aAASC,EACTC,QAAQ,EACRC,UAAU,GAERC,EAAgBC,IAAMC,YAAW,SAAUC,EAAMC,GACnD,IAAIC,EAAWF,EAAKE,SAChBP,EAASK,EAAKL,OACdC,EAAWI,EAAKJ,SAChBO,EAAYH,EAAKG,UACjBV,EAAUO,EAAKP,QACfW,EAASJ,EAAKI,OACdC,EAAKL,EAAKK,GACVC,EAAWN,EAAKM,SAChBC,EAAUP,EAAKO,QACfC,EAAQC,YAA8BT,EAAM,CAAC,WAAY,SAAU,WAAY,YAAa,UAAW,SAAU,KAAM,WAAY,YAEvIE,EAAWQ,YAAmBR,EAAU,mBACxC,IAAIS,EAAcC,uBAAY,SAAUC,GACtC,GAAIjB,EAGF,OAFAiB,EAAMC,sBACND,EAAME,kBAIJR,GAASA,EAAQM,KACpB,CAACjB,EAAUW,IACd,OAAoBT,IAAMkB,cAAcC,IAAiBC,YAAS,CAChEjB,IAAKA,GACJO,EAAO,CAERF,SAAUa,YAAab,EAAUE,EAAMY,MAEvCf,GAAIA,IAAOD,EAASI,EAAMY,KAAO,IAAM,SAAW,OAClDb,QAASI,EACTR,UAAWkB,IAAWlB,EAAWD,EAAUP,GAAU,SAAUC,GAAY,WAAYH,GAAWS,EAAW,IAAMT,EAASW,GAAUF,EAAW,iBAGrJL,EAAcL,aAAeA,EAC7BK,EAAcyB,YAAc,gBACbzB,QCtCXL,EAAe,CACjBC,aAASC,EACT6B,gBAAY7B,GAEV8B,EAAY1B,IAAMC,YAAW,SAAUS,EAAOP,GAChD,IAYIwB,EAZAC,EAAmBC,YAAgBnB,EAAO,CAC5CoB,UAAW,aAETzB,EAAYuB,EAAiBvB,UAC7B0B,EAAkBH,EAAiBxB,SACnCT,EAAUiC,EAAiBjC,QAC3B8B,EAAaG,EAAiBH,WAC9BO,EAAsBJ,EAAiBrB,GACvCA,OAA6B,IAAxByB,EAAiC,MAAQA,EAC9CC,EAAkBtB,YAA8BiB,EAAkB,CAAC,YAAa,WAAY,UAAW,aAAc,OAErHxB,EAAWQ,YAAmBmB,EAAiB,cAUnD,OANEJ,EADEF,GACiC,IAAfA,EAAsB,aAAe,cAAgBA,EAErD,KAIFzB,IAAMkB,cAAcgB,IAAad,YAAS,CAC5DjB,IAAKA,GACJ8B,EAAiB,CAClB1B,GAAIA,EACJF,UAAWkB,IAAWlB,EAAWD,EAAUT,GAAWS,EAAW,IAAMT,EAASgC,GAAqBvB,EAAW,IAAMuB,SAG1HD,EAAUhC,aAAeA,EACzBgC,EAAUF,YAAc,YACxBE,EAAUS,KAAOpC,EACF2B,O,uLC3CTU,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC7B,OACE,sBAAKlC,UAAU,SAAf,UACE,+BACE,mBACEmC,MAAO,CAAED,SACTlC,UACEgC,GAAS,EACL,cACAA,GAAS,GACT,uBACA,kBAIV,+BACE,mBACEG,MAAO,CAAED,SACTlC,UACEgC,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACEG,MAAO,CAAED,SACTlC,UACEgC,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACEG,MAAO,CAAED,SACTlC,UACEgC,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BACE,mBACEG,MAAO,CAAED,SACTlC,UACEgC,GAAS,EACL,cACAA,GAAS,IACT,uBACA,kBAIV,+BAAOC,GAAQA,QAKrBF,EAAO1C,aAAe,CACpB6C,MAAO,WAGMH,Q,yDC8UAK,UA3XO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAChC,EAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8CN,mBAAS,MAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAwCR,mBAAS,MAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA8CV,mBAAS,MAAvD,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAAwCZ,mBAAS,MAAjD,mBAAOa,EAAP,KAAqBC,GAArB,KAEMzG,GAAW0G,cAGTrG,GADUsG,aAAY,SAACC,GAAD,OAAWA,EAAMtG,aACvCD,SAEFwG,GAAcF,aAAY,SAACC,GAAD,OAAWA,EAAME,gBACzCC,GAAyBF,GAAzBE,QAASC,GAAgBH,GAAhBG,KAAMC,GAAUJ,GAAVI,MAEjBC,GAAeP,aAAY,SAACC,GAAD,OAAWA,EAAMM,gBACjCC,GACMD,GADfE,QACCC,GAAcH,GAArBD,MAEMK,GAAYX,aAAY,SAACC,GAAD,OAAWA,EAAMU,aAC9BC,GACYD,GADrBF,QACCI,GAAoBF,GAA3BL,MAEEQ,GAAsBd,aAAY,SAACC,GAAD,OAAWA,EAAMc,qBAE9CC,GAEPF,GAFFL,QACOQ,GACLH,GADFR,MAIFY,qBAAU,WACJF,KACFG,MAAM,qBACN/B,EAAU,GACVE,EAAW,IACXjG,GAAS,CAAEG,KAAM4H,OAEfZ,IACFhB,EAAmB,gCAGXkB,IACRhB,EAAgB,6CAGdkB,IACFhB,EAAmB,4BAGjBiB,IACFf,GAAgB,yCAGlBzG,GAASgI,YAAiBtC,EAAMuC,OAAOnI,OAEtC,CAACE,GAAU0F,EAAMuC,OAAOnI,GACzB6H,GACAR,GACAE,GACAE,GACAC,KAGF,IAAMU,GAAmB,WACvBzC,EAAQ0C,KAAR,gBAAsBzC,EAAMuC,OAAOnI,GAAnC,iBAA8C8F,KAE1CwC,GAAqB,uCAAG,WAAOtI,EAAIC,GAAX,SAAAG,EAAA,sDAC1BF,GAASH,YAAqBC,EAAGC,IADP,2CAAH,wDAIrBsI,GAAkB,uCAAG,WAAOvI,EAAIC,GAAX,SAAAG,EAAA,sDACzBF,GAAS6B,YAAkB/B,EAAGC,IADL,2CAAH,wDAWxB,OACE,qCACE,cAAC,OAAD,CACEwF,MAAO,CACL+C,gBAAiB,gBACjBhD,MAAO,QACPiD,OAAQ,iBACRC,aAAc,OACdC,UAAW,OACXC,aAAc,QAEhBtF,UAAU,gBACVuF,GAAG,IAVL,qBAcC5B,GACC,cAAC6B,EAAA,EAAD,IACE3B,GACF,cAAC4B,EAAA,EAAD,CAAcnG,QAAQ,SAAtB,SAAgCuE,KAEhC,qCACE,cAAC6B,EAAA,EAAD,CAAMC,MAAO/B,GAAKgC,aAClB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAOC,IAAKrC,GAAKsC,UAAWC,IAAKvC,GAAKgC,WAAYQ,OAAK,MAEzD,cAACN,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC1E,EAAA,EAAD,CAAW/B,QAAQ,QAAnB,UACE,cAAC+B,EAAA,EAAUS,KAAX,UACE,6BAAK8B,GAAKgC,eAEZ,cAACvE,EAAA,EAAUS,KAAX,UACE,cAAC,EAAD,CACEE,MAAO4B,GAAKlB,OACZT,KAAI,UAAK2B,GAAKyC,WAAV,gBAGR,eAAChF,EAAA,EAAUS,KAAX,uBAA0B8B,GAAK0C,eAC/B,eAACjF,EAAA,EAAUS,KAAX,uBACY8B,GAAK2C,sBAIrB,cAACT,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACS,EAAA,EAAD,UACE,eAACnF,EAAA,EAAD,CAAW/B,QAAQ,QAAnB,UACE,cAAC+B,EAAA,EAAUS,KAAX,UACE,eAAC+D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,UACE,wCAAWlC,GAAK0C,sBAKtB,cAACjF,EAAA,EAAUS,KAAX,UACE,eAAC+D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,UACGlC,GAAK6C,aAAe,EAAI,WAAa,sBAK3C7C,GAAK6C,aAAe,GACnB,cAACpF,EAAA,EAAUS,KAAX,UACE,eAAC+D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,UACE,cAACY,EAAA,EAAD,CACExG,GAAG,SACH8B,MAAOQ,EACPmE,SAAU,SAACC,GAAD,OAAOnE,EAAOmE,EAAEC,OAAO7E,QAHnC,SAMG,YAAI8E,MAAMlD,GAAK6C,cAAcM,QAAQC,KACpC,SAACC,GAAD,OACE,wBAAoBjF,MAAOiF,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,eAW/B,eAAC5F,EAAA,EAAUS,KAAX,WACM7E,GAKqB,YAAxB2G,GAAKsD,gBACJjK,KAAaA,GAASkK,SACxB,eAAC1B,EAAA,EAAD,qCACyB,cAAC,OAAD,CAAMF,GAAG,aAAT,oBADzB,KAC+D,OAgE3D3B,GAAK6C,aAAe,EAClB,qCACA,cAACW,EAAA,EAAD,CACFhH,QAAS0E,GACT9E,UAAU,YACVmC,MAAO,CACL+C,gBAAiB,iBAEnBnI,KAAK,SACL0C,SAAgC,IAAtBmE,GAAK6C,aAPb,yBAWJ,cAACW,EAAA,EAAD,CACMhH,QAAS,kBAAM4E,GAAsBpB,GAAKyD,IAAIpK,GAASoK,MACvDrH,UAAU,YACVmC,MAAO,CACL+C,gBAAiB,iBAEnBnI,KAAK,SANX,iCAaM,qCACA,cAACqK,EAAA,EAAD,CACAhH,QAAS,kBAAM4E,GAAsBpB,GAAKyD,IAAIpK,GAASoK,MACvDrH,UAAU,YACVmC,MAAO,CACL+C,gBAAiB,iBAEnBnI,KAAK,SANL,8BAUF,cAACqK,EAAA,EAAD,CACEhH,QAAS,kBAAM6E,GAAmBrB,GAAKyD,IAAIpK,GAASoK,MACpDrH,UAAU,YACVmC,MAAO,CACL+C,gBAAiB,iBAEnBnI,KAAK,SANP,8BA5GN,eAAC0I,EAAA,EAAD,qBACS,cAAC,OAAD,CAAMF,GAAG,SAAT,mBADT,oBACyD,OA4H1DzC,GAAmB,cAAC2C,EAAA,EAAD,CAAcnG,QAAQ,UAAtB,SAAiCwD,IACpDE,GAAgB,cAACyC,EAAA,EAAD,CAAcnG,QAAQ,SAAtB,SAAgC0D,IAChDE,GAAmB,cAACuC,EAAA,EAAD,CAAcnG,QAAQ,UAAtB,SAAiC4D,IACpDE,GAAgB,cAACqC,EAAA,EAAD,CAAcnG,QAAQ,SAAtB,SAAgC8D,iBAQzD,cAACyC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,yCACyB,IAAxBnC,GAAK0D,QAAQC,QAAgB,cAAC9B,EAAA,EAAD,yBAC9B,eAACpE,EAAA,EAAD,CAAW/B,QAAQ,QAAnB,UACGsE,GAAK0D,QAAQN,KAAI,SAACQ,GAAD,OAChB,eAACnG,EAAA,EAAUS,KAAX,WACE,iCAAS0F,EAAO7K,MAAQ6K,EAAO7K,KAAK8K,OACpC,cAAC,EAAD,CAAQzF,MAAOwF,EAAO9E,SACtB,4BAAI8E,EAAOE,UAAUC,UAAU,EAAG,MAClC,4BAAIH,EAAO5E,YAJQ4E,EAAOH,QAO9B,eAAChG,EAAA,EAAUS,KAAX,WACE,yDACC0C,IACC,cAACiB,EAAA,EAAD,CAAcnG,QAAQ,SAAtB,SAAgCkF,KAEjCvH,GACC,eAAC2K,EAAA,EAAD,CAAMC,SA5PF,SAACjB,GACrBA,EAAEjG,iBACF/D,GAASkL,YAAkBxF,EAAMuC,OAAOnI,GAAI,CAAEgG,SAAQE,cA0PtC,UACE,eAACgF,EAAA,EAAKG,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,qBACA,eAACL,EAAA,EAAKM,QAAN,CACEhI,GAAG,SACH8B,MAAOU,EACPiE,SAAU,SAACC,GAAD,OAAOjE,EAAUiE,EAAEC,OAAO7E,QAHtC,UAKE,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,gCAGJ,eAAC4F,EAAA,EAAKG,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,sBACA,cAACL,EAAA,EAAKM,QAAN,CACEhI,GAAG,WACHiI,IAAI,IACJnG,MAAOY,EACP+D,SAAU,SAACC,GAAD,OAAO/D,EAAW+D,EAAEC,OAAO7E,aAGzC,cAACoF,EAAA,EAAD,CACErK,KAAK,SACLuC,QAAQ,UACR6C,MAAO,CACL+C,gBAAiB,iBAJrB,uBAWF,eAACO,EAAA,EAAD,qBACS,cAAC,OAAD,CAAMF,GAAG,SAAT,mBADT,qBAC0D","file":"static/js/7.13a8b451.chunk.js","sourcesContent":["import {\r\n    FAVOURITE_ADD_REQUEST,\r\n    FAVOURITE_ADD_SUCCESS,\r\n    FAVOURITE_ADD_FAIL,\r\n    // FAVOURITE_ADD_RESET,\r\n    FAVOURITE_REMOVE_REQUEST,\r\n    FAVOURITE_REMOVE_SUCCESS,\r\n    FAVOURITE_REMOVE_FAIL,\r\n    FAVOURITE_REQUEST,\r\n    FAVOURITE_SUCCESS,\r\n    FAVOURITE_FAIL,\r\n  } from \"../constants/favouriteConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToFavouriteAction = (id ,user ) => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_ADD_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/favourite/goods/${id}`, user, config);\r\n  \r\n      dispatch({\r\n        type: FAVOURITE_ADD_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_ADD_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteFavouriteAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/favourite/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: FAVOURITE_REMOVE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listMyFavourite = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: FAVOURITE_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/favourite/myfavourite`, config)\r\n  \r\n      dispatch({ type: FAVOURITE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FAVOURITE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import {\r\n    WANTED_ADD_REQUEST,\r\n    WANTED_ADD_SUCCESS,\r\n    WANTED_ADD_FAIL,\r\n    WANTED_REMOVE_REQUEST,\r\n    WANTED_REMOVE_SUCCESS,\r\n    WANTED_REMOVE_FAIL,\r\n    WANTED_REQUEST,\r\n    WANTED_SUCCESS,\r\n    WANTED_FAIL,\r\n  } from \"../constants/wantedConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToWantedAction = (id ,user ) => async (dispatch,getState) => {\r\n    try {\r\n      dispatch({\r\n        type: WANTED_ADD_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.post(`/api/wanted/goods/${id}`, user, config);\r\n  \r\n      dispatch({\r\n        type: WANTED_ADD_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: WANTED_ADD_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteWantedAction = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: WANTED_REMOVE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      const { data } = await axios.delete(`/api/wanted/goods/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: WANTED_REMOVE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: WANTED_REMOVE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const listMyWanted= () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: WANTED_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(`/api/wanted/myWANTED`, config)\r\n  \r\n      dispatch({ type: WANTED_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: WANTED_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  FormControl,\n} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Meta from '../components/Meta'\nimport {\n  listGoodsDetails,\n  createGoodsReview,\n} from '../actions/goodsActions'\nimport {\n  addToFavouriteAction\n} from '../actions/favouriteActions'\nimport {\n  addToWantedAction\n} from '../actions/wantedActions'\nimport { GOODS_CREATE_REVIEW_RESET } from '../constants/goodsConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n  const [successfmessage, setSuccessfMessage] = useState(null)\n  const [failfmessage, setFailfMessage] = useState(null)\n  const [successwmessage, setSuccesswMessage] = useState(null)\n  const [failwmessage, setFailwMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const listDetails = useSelector((state) => state.goodsDetails)\n  const { loading, good, error } = listDetails\n\n  const addFavourite = useSelector((state) => state.addFavourite);\n  const { success: successadd,\n    error: erroradd, } = addFavourite;\n\n    const addWanted = useSelector((state) => state.addWanted);\n    const { success: successaddwanted,\n      error: erroraddwanted, } = addWanted;\n\n  const productReviewCreate = useSelector((state) => state.goodsReviewCreate)\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n\n  useEffect(() => {    \n    if (successProductReview) {\n      alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: GOODS_CREATE_REVIEW_RESET })\n    }\n    if (successadd){\n      setSuccessfMessage('Add Favourites successfully!')\n      // alert('Add Favourites successfully!')\n          }\n           if(erroradd){\n      setFailfMessage('You already add this model to Favourites!')\n      // alert('You already add this model to Favourites!')\n          }\n    if (successaddwanted){\n      setSuccesswMessage('Add Wanted successfully!')\n      // alert('Add Wanted successfully!')\n          }\n    if (erroraddwanted){\n      setFailwMessage('You already add this model to Wanted!')\n      // alert('You already add this model to wanteds!')\n          }\n    dispatch(listGoodsDetails(match.params.id))\n    \n  }, [dispatch, match.params.id,  \n    successProductReview,\n    successadd,\n    erroradd,\n    successaddwanted,\n    erroraddwanted\n  ])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}/?qty=${qty}`)\n  }\n  const addToFavouriteHandler = async (id, user) => {\n      dispatch(addToFavouriteAction(id,user))\n  }\n\n  const addToWantedHandler = async (id, user) => {\n    dispatch(addToWantedAction(id,user))\n\n}\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createGoodsReview(match.params.id, { rating, comment }))\n    // dispatch(addToFavouriteAction(match.params.id))\n  }\n  // console.log(good.reviews.length);\n  return (\n    <>\n      <Link\n        style={{\n          backgroundColor: 'rgb(63 57 63)',\n          color: 'white',\n          border: '2px solid pink',\n          borderRadius: '10px',\n          marginTop: '50px',\n          marginBottom: '10px',\n        }}\n        className='btn btn-light'\n        to='/'\n      >\n        Go Back\n      </Link>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <ErrorMessage variant='danger'>{error}</ErrorMessage>\n      ) : (\n        <>\n          <Meta title={good.goods_name} />\n          <Row>\n            <Col md={6}>\n              <Image src={good.goods_pic} alt={good.goods_name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{good.goods_name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={good.rating}\n                    text={`${good.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: $ {good.goods_price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Details: {good.goods_details}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>$ {good.goods_price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {good.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {good.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <FormControl\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {/* this line mean if we have five item in the array it will show like this [0, 1, 2, 3, 4] */}\n                            {[...Array(good.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </FormControl>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  \n                  <ListGroup.Item>\n                      {!userInfo ?(\n                    <ErrorMessage>\n                      Please <Link to='/login'>login</Link> to buy the goods{' '}\n                    </ErrorMessage>\n                    ):\n                    (good.goods_category === 'Special' ? (\n                      userInfo && !userInfo.isMember ? (\n                    <ErrorMessage>\n                      First you need to be a <Link to='/paymember'>member</Link> .{' '}\n                    </ErrorMessage>                       \n                    //     <Button\n                    //   className='btn-block'\n                    //   style={{\n                    //     backgroundColor: 'rgb(63 57 63)',\n                    //   }}\n                    //   type='button'\n                    //   disabled={good.countInStock === 0}\n                    //   onClick={() => gotobuymemberHandler()}\n                    // >\n                    //   Be a prime member\n                    // </Button>                                                           \n                    ):(\n                      good.countInStock > 0 ? (\n                      <>\n                      <Button\n                    onClick={addToCartHandler}\n                    className='btn-block'\n                    style={{\n                      backgroundColor: 'rgb(63 57 63)',\n                    }}\n                    type='button'\n                    disabled={good.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n                  <Button\n                        onClick={() => addToFavouriteHandler(good._id,userInfo._id)}\n                        className='btn-block'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                        type='button'\n                      >\n                        Add To Favourite\n                      </Button>\n                      </>\n                      ):\n                      (\n                        <>\n                        <Button\n                        onClick={() => addToFavouriteHandler(good._id,userInfo._id)}\n                        className='btn-block'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                        type='button'\n                      >\n                        Add To Favourite\n                      </Button>\n                      <Button\n                        onClick={() => addToWantedHandler(good._id,userInfo._id)}\n                        className='btn-block'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                        type='button'\n                      >\n                        Add To Wanted\n                      </Button>\n                      </>\n                      )\n                      )):(\n                        good.countInStock > 0 ? (\n                          <>\n                          <Button\n                        onClick={addToCartHandler}\n                        className='btn-block'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                        type='button'\n                        disabled={good.countInStock === 0}\n                      >\n                        Add To Cart\n                      </Button>\n                      <Button\n                            onClick={() => addToFavouriteHandler(good._id,userInfo._id)}\n                            className='btn-block'\n                            style={{\n                              backgroundColor: 'rgb(63 57 63)',\n                            }}\n                            type='button'\n                          >\n                            Add To Favourite\n                          </Button>\n                          </>\n                          ):\n                          (\n                            <>\n                            <Button\n                            onClick={() => addToFavouriteHandler(good._id,userInfo._id)}\n                            className='btn-block'\n                            style={{\n                              backgroundColor: 'rgb(63 57 63)',\n                            }}\n                            type='button'\n                          >\n                            Add To Favourite\n                          </Button>\n                          <Button\n                            onClick={() => addToWantedHandler(good._id,userInfo._id)}\n                            className='btn-block'\n                            style={{\n                              backgroundColor: 'rgb(63 57 63)',\n                            }}\n                            type='button'\n                          >\n                            Add To Wanted\n                          </Button>\n                          </>\n                      )\n                      \n                      )\n                    )\n      \n                    }\n                  {successfmessage && <ErrorMessage variant='success'>{successfmessage}</ErrorMessage>}\n                  {failfmessage && <ErrorMessage variant='danger'>{failfmessage}</ErrorMessage>}\n                  {successwmessage && <ErrorMessage variant='success'>{successwmessage}</ErrorMessage>}\n                  {failwmessage && <ErrorMessage variant='danger'>{failwmessage}</ErrorMessage>}\n                  </ListGroup.Item>\n                  \n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {good.reviews.length === 0 && <ErrorMessage>No Reviews</ErrorMessage>}\n              <ListGroup variant='flush'>\n                {good.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.user && review.user.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <ErrorMessage variant='danger'>{errorProductReview}</ErrorMessage>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1- Poor</option>\n                          <option value='2'>2- Fair</option>\n                          <option value='3'>3- Good</option>\n                          <option value='4'>4- Very Good</option>\n                          <option value='5'>5- Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        type='submit'\n                        variant='primary'\n                        style={{\n                          backgroundColor: 'rgb(63 57 63)',\n                        }}\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <ErrorMessage>\n                      Please <Link to='/login'>login</Link> to write a review{' '}\n                    </ErrorMessage>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n"],"sourceRoot":""}