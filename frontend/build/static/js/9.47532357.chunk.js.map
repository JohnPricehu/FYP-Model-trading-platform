{"version":3,"sources":["actions/cartAction.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","views/CartScreen.js"],"names":["addToCart","id","qty","dispatch","getState","a","axios","get","data","type","CART_ADD_ITEM","payload","product","_id","name","goods_name","image","goods_pic","price","goods_price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CART_REMOVE_ITEM","cleanCart","removeItem","CART_CLEAN_ITEM","saveShippingAddress","CART_SAVE_SHIPPING_ADDRESS","savePaymentMethod","CART_SAVE_PAYMENT_METHOD","defaultProps","variant","undefined","active","disabled","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","className","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","CartScreen","match","location","history","productId","params","search","Number","split","useDispatch","useSelector","state","userInfo","userLogin","useEffect","md","length","to","map","item","src","alt","fluid","rounded","Control","value","onChange","e","target","Array","keys","x","isMember","reduce","acc","toFixed","style","backgroundColor","border","borderRadius","push","go"],"mappings":"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","file":"static/js/9.47532357.chunk.js","sourcesContent":["import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAN_ITEM\n} from '../constants/cartConstants'\n\n// (getState.js) allows as to get what ever we want from our state in the store.js\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/goods/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.goods_name,\n      image: data.goods_pic,\n      price: data.goods_price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const cleanCart = () => async (dispatch) => {\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: CART_CLEAN_ITEM });\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Form, Card, Button } from 'react-bootstrap'\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { addToCart, removeFromCart, cleanCart} from '../actions/cartAction'\n\n// location is used to get ?qty= from the url\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  // location.search will give us (?qty=1) . So we check if is there then we split it . split method will return an array like this ['qty', '1']. and we want the second index [1]\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n  const cleanHandler = () => {\n    dispatch(cleanCart());\n    // history.go(\"0\");\n    history.push(\"/cart\");\n    history.go(\"0\");\n  };\n  const checkOutHandler = () => {\n    history.push('/shipping')\n  }\n  return (\n    <Row className='my-5'>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <ErrorMessage>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </ErrorMessage>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'>Delete</i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            {userInfo && userInfo.isMember ? (\n            <ListGroup.Item>\n            \n              <h2>\n                Subtotal ( {cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              ${cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)} * 80% =  ${cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price * 0.8, 0)\n                  .toFixed(2)}\n            </ListGroup.Item>\n            ):(\n              <ListGroup.Item>\n            \n              <h2>\n                Subtotal ( {cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            )}\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                style={{\n                  backgroundColor: 'red',\n                  border: '1px solid #B375B0 ',\n                  borderRadius: '20px',\n                }}\n                disabled={cartItems.length === 0}\n                onClick={cleanHandler}\n                \n              >\n                Clean Your Cart\n              </Button>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                style={{\n                  backgroundColor: 'rgb(63 57 63)',\n                  border: '1px solid #B375B0 ',\n                  borderRadius: '20px',\n                }}\n                disabled={cartItems.length === 0}\n                onClick={checkOutHandler}\n                \n              >\n                Procced To Check Out\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n"],"sourceRoot":""}