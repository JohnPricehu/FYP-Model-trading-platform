{"version":3,"sources":["components/FormContainer.js","views/ProductEditScreen.js"],"names":["FormContainer","children","className","xs","md","ProductEditScreen","match","history","productId","params","id","useState","goods_name","setName","goods_price","setPrice","goods_category","setCategory","countInStock","setCountInStock","goods_details","setDescription","setPicMessage","goods_pic","setGoods_pic","dispatch","useDispatch","goodsDetails","useSelector","state","loading","error","good","goodsUpdate","loadingUpdate","errorUpdate","successUpdate","success","useEffect","type","GOODS_UPDATE_RESET","push","_id","listGoodsDetails","to","variant","onSubmit","e","preventDefault","updateGoods","Group","controlId","Label","Control","placeholder","value","onChange","target","accept","pics","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","height","width","src","alt"],"mappings":"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","file":"static/js/15.bf08b708.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FormContainer from '../components/FormContainer'\nimport { listGoodsDetails, updateGoods } from '../actions/goodsActions'\nimport { GOODS_UPDATE_RESET } from '../constants/goodsConstants'\n// import { app } from '../base'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n  const [goods_name, setName] = useState('')\n  const [goods_price, setPrice] = useState(0)\n  // const [image, setImage] = useState('')\n  // const [brand, setBrand] = useState('')\n  const [goods_category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [goods_details, setDescription] = useState('')\n  const [\n    // picMessage,\n     setPicMessage] = useState(null);\n  const [goods_pic, setGoods_pic] = useState(\"\");\n  // const [imageURL, setImageURL] = useState('')\n\n  const dispatch = useDispatch()\n\n  const goodsDetails = useSelector((state) => state.goodsDetails)\n  const { loading, error, good } = goodsDetails\n\n  const goodsUpdate = useSelector((state) => state.goodsUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = goodsUpdate\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"goods_pic\");\n      data.append(\"cloud_name\", \"fyp2022\");\n      fetch(\"https://api.cloudinary.com/v1_1/fyp2022/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setGoods_pic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: GOODS_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!good.goods_name || good._id !== productId) {\n        dispatch(listGoodsDetails(productId))\n      } else {\n        setName(good.goods_name)\n        setPrice(good.goods_price)\n        setGoods_pic(good.goods_pic)\n        setCategory(good.goods_category)\n        setCountInStock(good.countInStock)\n        setDescription(good.goods_details)\n      }\n    }\n  }, [dispatch, history, good, productId, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateGoods({\n        _id: productId,\n        goods_name,\n        goods_price,\n        goods_pic,\n        goods_category,\n        goods_details,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit Model</h1>\n        {loadingUpdate && <Loading />}\n        {errorUpdate && <ErrorMessage variant='danger'>{errorUpdate}</ErrorMessage>}\n\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <ErrorMessage variant='danger'>{error}</ErrorMessage>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={goods_name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={goods_price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              {goods_pic === 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg' ? (\n                <input \n                type='file' \n                accept=\"image/*\"\n                onChange={(e) => postDetails(e.target.files[0])} />\n              ) : (\n                <p>Image Selected !!!!</p>\n              )}\n              {goods_pic === 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg' ? (\n                <p>no image</p>\n              ) : (\n                <img height='100' width='100' src={goods_pic} alt={goods_name} />\n              )}\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={goods_category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Details</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Details '\n                value={goods_details}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n"],"sourceRoot":""}