{"version":3,"sources":["components/FormContainer.js","actions/cartAction.js","components/CheckOutSteps.js","views/ShippingScreen.js"],"names":["FormContainer","children","className","xs","md","addToCart","id","qty","dispatch","getState","a","axios","get","data","type","CART_ADD_ITEM","payload","product","_id","name","goods_name","image","goods_pic","price","goods_price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CART_REMOVE_ITEM","cleanCart","removeItem","CART_CLEAN_ITEM","saveShippingAddress","CART_SAVE_SHIPPING_ADDRESS","savePaymentMethod","CART_SAVE_PAYMENT_METHOD","CheckOutSteps","step1","step2","step3","step4","Item","to","Link","disabled","ShippingScreen","history","shippingAddress","useSelector","state","useState","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","useDispatch","onSubmit","e","preventDefault","push","Group","controlId","Label","Control","placeholder","value","required","onChange","target","style","backgroundColor","border","borderRadius"],"mappings":"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","file":"static/js/6.19f6ff68.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAN_ITEM\n} from '../constants/cartConstants'\n\n// (getState.js) allows as to get what ever we want from our state in the store.js\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/goods/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.goods_name,\n      image: data.goods_pic,\n      price: data.goods_price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const cleanCart = () => async (dispatch) => {\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: CART_CLEAN_ITEM });\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckOutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckOutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckOutSteps from '../components/CheckOutSteps'\nimport { saveShippingAddress } from '../actions/cartAction'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckOutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='city'>\n          <Form.Label>city</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='postalCode'>\n          <Form.Label>postalCode</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postalCode'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='country'>\n          <Form.Label>country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button\n          type='submit'\n          style={{\n            backgroundColor: 'rgb(41 41 41)',\n            border: '1px solid #B375B0 ',\n            borderRadius: '20px',\n          }}\n        >\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n"],"sourceRoot":""}