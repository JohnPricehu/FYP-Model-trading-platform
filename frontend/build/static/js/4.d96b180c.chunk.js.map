{"version":3,"sources":["actions/cartAction.js","actions/orderAction.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","views/orderScreen.js"],"names":["addToCart","id","qty","dispatch","getState","a","axios","get","data","type","CART_ADD_ITEM","payload","product","_id","name","goods_name","image","goods_pic","price","goods_price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CART_REMOVE_ITEM","cleanCart","removeItem","CART_CLEAN_ITEM","saveShippingAddress","CART_SAVE_SHIPPING_ADDRESS","savePaymentMethod","CART_SAVE_PAYMENT_METHOD","createOrder","order","ORDER_CREATED_REQUEST","userInfo","userLogin","config","headers","Authorization","token","post","ORDER_CREATED_SUCCESS","ORDER_CREATED_FAIL","response","message","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","payOrder","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","deliverOrder","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","console","log","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","deleteOrder","ORDER_DELETE_REQUEST","delete","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","defaultProps","variant","undefined","active","disabled","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","className","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","displayName","horizontal","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","_useUncontrolled$as","controlledProps","AbstractNav","Item","OrderScreen","num","match","history","orderId","params","useDispatch","useState","failpmessage","setFailpMessage","orderDetails","useSelector","state","loading","error","orderDeliver","loadingDeliver","orderPay","success","loadingPay","errorPay","itemsPrice","orderItems","reduce","acc","item","Math","round","toFixed","useEffect","push","go","payHandler","md","user","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","length","map","index","src","alt","fluid","rounded","to","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","file":"static/js/4.d96b180c.chunk.js","sourcesContent":["import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAN_ITEM\n} from '../constants/cartConstants'\n\n// (getState.js) allows as to get what ever we want from our state in the store.js\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/goods/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.goods_name,\n      image: data.goods_pic,\n      price: data.goods_price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const cleanCart = () => async (dispatch) => {\n  localStorage.removeItem(\"cartItems\");\n  dispatch({ type: CART_CLEAN_ITEM });\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import axios from 'axios'\nimport {\n  ORDER_CREATED_REQUEST,\n  ORDER_CREATED_SUCCESS,\n  ORDER_CREATED_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELETE_FAIL,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_REQUEST,\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATED_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.post(`/api/orders`, order, config)\n    dispatch({\n      type: ORDER_CREATED_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATED_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const payOrder = (order, \n  // paymentResult\n  ) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/pay`,\n      {},\n      // paymentResult,\n      config\n    )\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/delivered`,\n      {},\n      config\n    )\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n    console.log(error)\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/orders`, config)\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n    })\n    const {\n      userLogin: { userInfo },\n    } = getState()\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n    await axios.delete(`/api/orders/${id}`, config)\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: undefined,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return /*#__PURE__*/React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    // TODO: Restrict eventKey to string in v5?\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line no-nested-ternary\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: undefined,\n  horizontal: undefined\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","import React, { useEffect, useState } from 'react'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { Link } from 'react-router-dom'\nimport { getOrderDetails, deliverOrder,payOrder } from '../actions/orderAction'\nimport { cleanCart} from '../actions/cartAction'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n  const [failpmessage, setFailpMessage] = useState(null)\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay, error:errorPay } = orderPay\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    // Calculate prices\n    const addDcimal = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    order.itemsPrice = addDcimal(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n    if(errorPay){\n      history.go(0)\n      setFailpMessage('Payment Failed! Check your wallet!')\n      // alert('Payment Failed! Check your wallet!')\n    }\n    dispatch(getOrderDetails(orderId))\n  }, [dispatch, orderId, errorPay, history, userInfo])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n    history.go(0)\n  }\n  const payHandler = () => {\n    dispatch(payOrder(order))\n    history.go(0)\n    dispatch(cleanCart())\n  }\n  return loading ? (\n    <Loading  />\n  ) : error ? (\n    <ErrorMessage variant='danger'>{error}</ErrorMessage>\n  ) : (\n    <>\n      <h1 className='mt-5'>Order{order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                {' '}\n                <strong>Name: </strong> {order.user.name}{' '}\n              </p>\n              <p>\n                {' '}\n                <strong>Email: </strong>{' '}\n                <a href={`mailto: ${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.address}, {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <ErrorMessage variant='success'>\n                  Delivered on {order.deliveredAt}\n                </ErrorMessage>\n              ) : (\n                <ErrorMessage variant='danger'>Not Delivered</ErrorMessage>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <ErrorMessage variant='success'>Paid on {order.paidAt}</ErrorMessage>\n              ) : (\n                <ErrorMessage variant='danger'>Not Paid</ErrorMessage>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <ErrorMessage>Order Is Empty</ErrorMessage>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  {<Col>${order.taxPrice}</Col>}\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n              {loadingPay && <Loading />}\n                {userInfo && !userInfo.isAdmin && !order.isPaid && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={payHandler}\n                    >\n                      Pay Order\n                    </Button>\n                                        \n                  </ListGroup.Item>\n                )}\n                {userInfo && userInfo.isAdmin && !order.isPaid && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={payHandler}\n                    >\n                      Mark As Paid\n                    </Button>\n                                        \n                  </ListGroup.Item>\n                )}\n                {loadingDeliver && <Loading />}\n                {order.isPaid && !order.isDelivered && (\n                  \n                  <ListGroup.Item>\n                <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                    </ListGroup.Item>\n                    )}\n              </ListGroup.Item>\n              {failpmessage && <ErrorMessage variant='danger'>{failpmessage}</ErrorMessage>}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n"],"sourceRoot":""}