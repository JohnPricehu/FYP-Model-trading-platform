{"version":3,"sources":["components/FormContainer.js","views/UserEditScreen.js"],"names":["FormContainer","children","className","xs","md","UserEditScreen","match","history","userId","params","id","useState","name","setName","email","setEmail","phone","setPhone","wallet","setWallet","isAdmin","setIsAdmin","isMember","setIsMember","dispatch","useDispatch","userDetails","useSelector","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","useEffect","type","USER_UPDATE_RESET","push","_id","getUserDetails","to","variant","onSubmit","e","preventDefault","updateUser","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","label","checked"],"mappings":"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","file":"static/js/18.a5913917.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from \"../components/Loading\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [wallet, setWallet] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [isMember, setIsMember] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setPhone(user.email)\n        setWallet(user.wallet)\n        setIsAdmin(user.isAdmin)\n        setIsMember(user.isMember)\n      }\n    }\n  }, [\n    dispatch,\n    history,\n    successUpdate,\n    user._id,\n    user.email,\n    user.isAdmin,\n    user.isMember,\n    user.name,\n    user.phone,\n    userId,\n    user.wallet\n  ])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, phone, wallet, isAdmin, isMember }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loading />}\n        {errorUpdate && <ErrorMessage variant='danger'>{errorUpdate}</ErrorMessage>}\n        {loading ? (\n          <Loading />\n        ) : error ? (\n          <ErrorMessage variant='danger'>{error}</ErrorMessage>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='phone'>\n              <Form.Label>Phone</Form.Label>\n              <Form.Control\n                type='phone'\n                placeholder='Enter Phone'\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='wallet'>\n              <Form.Label>wallet</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Change wallet'\n                value={wallet}\n                onChange={(e) => setWallet(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Form.Group controlId='ismember'>\n              <Form.Check\n                type='checkbox'\n                label='Is Member'\n                checked={isMember}\n                onChange={(e) => setIsMember(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n"],"sourceRoot":""}